[
  {
    "objectID": "compendium/Example_blog.html",
    "href": "compendium/Example_blog.html",
    "title": "Example Blog",
    "section": "",
    "text": "In this class you will be contributing posts to a quarto blog to complete weekly assignments. It can be very helpful to see examples of working code as you learn about quarto. To help with this I created an example blog with lots of example code. If you have requests about examples to add please let me know.\nThe source code can be found here:\nhttps://github.com/CrumpLab/CrumplabExampleBlog\nThe blog is viewable here:\nhttps://crumplab.com/CrumplabExampleBlog/\nI will be mostly making posts for PSYC 3470 in this blog, but sometimes I may add posts with examples for students in other classes."
  },
  {
    "objectID": "compendium/index.html",
    "href": "compendium/index.html",
    "title": "Compendium",
    "section": "",
    "text": "This compendium will contain numerous assorted resources for PSYC 3470 and its contents will be expanded across the semester. Student contributions to the compendium are encouraged!"
  },
  {
    "objectID": "compendium/posit_cloud.html",
    "href": "compendium/posit_cloud.html",
    "title": "Posit cloud",
    "section": "",
    "text": "Posit cloud is an online service that allows you to run RStudio in your web-browser. You can sign up for a free account which should be sufficient for this class. The free account has 25 compute hours per month. If you need more you can pay 5 dollars a month for 75 hours.\nSome advantages to using posit cloud are that it runs recent versions of R and Rstudio, and should work “out-of-the-box” with minimal technical issues. It should be totally sufficient for the needs of our class."
  },
  {
    "objectID": "compendium/posit_cloud.html#get-a-posit-cloud-account",
    "href": "compendium/posit_cloud.html#get-a-posit-cloud-account",
    "title": "Posit cloud",
    "section": "Get a posit cloud account",
    "text": "Get a posit cloud account\nhttps://posit.cloud/plans/free"
  },
  {
    "objectID": "compendium/posit_cloud.html#login-screen",
    "href": "compendium/posit_cloud.html#login-screen",
    "title": "Posit cloud",
    "section": "Login screen",
    "text": "Login screen\nMy login screen looks shows a list of my existing R studio projects. Clicking on any of them will open Rstudio and load the project."
  },
  {
    "objectID": "compendium/posit_cloud.html#new-project",
    "href": "compendium/posit_cloud.html#new-project",
    "title": "Posit cloud",
    "section": "New Project",
    "text": "New Project\nClick the “New Project” Button to make a new project, and choose “New Rstudio Project”.\n\nYour project will start deploying, this could take 15-30 seconds:\n\nAnd when you are done, you should see a new R studio application in your browser.\n\nGive your project a name (up at the top), and then get started! You can do all of the things you would normally do. You can also install packages that you need, and they will be available next time without having to install them again. But, everytime you make a new project, you will start fresh.\nThe rest of this resource goes through a few minimal examples of getting started."
  },
  {
    "objectID": "compendium/posit_cloud.html#test-r-markdown-or-quarto",
    "href": "compendium/posit_cloud.html#test-r-markdown-or-quarto",
    "title": "Posit cloud",
    "section": "Test R Markdown or Quarto",
    "text": "Test R Markdown or Quarto\nClick the green circle with a plus to make a new document, choose quarto document.\n\nGive the document a title, and you can call yourself the author. Then press Create.\n\nYou will see the template quarto document, and a message that “rmarkdown required but not installed”.\n\nInstall rmarkdown by clicking the underlined install link. You should see the installation take place in the lower left panel. Takes about 30 seconds.\n\nOnce the installation finished, it’s time to see if quarto documents can be rendered to HTML. Click the render button:\n\nYou will be asked to save the file. I chose the name “test”. This will save the file “test.qmd” into my project folder.\nNext, I get a message saying a pop-up window was blocked, and I can’t see the output.\n\nThis OK, everything likely worked, you just can’t see it yet. I press Cancel.\n\nShow output in the viewer pane\nRendering documents produces outputs that can be viewed in different ways. I highly suggest viewing outputs in the viewer pane, this way you won’t have any pop-up blocker issues.\nGo to the tools menu, and select Global options:\n\nThen, find the Rmarkdown menu, and choose the viewer pane output option, and choose Apply, if the window doesn’t close, choose OK.\n\nNow, “Render” the document again, and you should see the output in the viewer pane tab."
  },
  {
    "objectID": "compendium/posit_cloud.html#datascience-in-a-box-example",
    "href": "compendium/posit_cloud.html#datascience-in-a-box-example",
    "title": "Posit cloud",
    "section": "Datascience in a box example",
    "text": "Datascience in a box example\nIn our second class we tried to use the lab computers to reproduce the analysis from this source code:\nhttps://github.com/rstudio-education/datascience-box/blob/main/course-materials/application-exercises/ae-01a-un-votes/unvotes.qmd\nThe lab computer software needed updates and was unable to compile the document. We should be able to do this no problem in a posit cloud environment.\n\nMake a new quarto doc, like above.\nReplace the contents of the document with the source code from the above link.\n\nLet’s use the “Source” editor which shows the plain text.\n\nDelete all of the text, and replace it with the source code in the link. My document is still called Untitled1 (it’s in red), and needs to be saved.\n\nI saves it as “Datavis1.qmd”, and then I see a message saying I need to install some packages. Click install.\n\nThere ’s a timer, let’s see how long it takes to install…about 56 seconds.\nAfter that you should be able to render and view the document.\n\nSuccess!"
  },
  {
    "objectID": "compendium/posit_cloud.html#quarto-blog",
    "href": "compendium/posit_cloud.html#quarto-blog",
    "title": "Posit cloud",
    "section": "Quarto Blog",
    "text": "Quarto Blog\nThis section provides instructions on using posit cloud to create and run your quarto blog.\nNOTE: when you create a new project on posit cloud you do not get the option to create a quarto blog project. We will use another method involving copying the contents of a github repository.\nI created a github repository called quartoCourseBlog for this purpose. The link is:\nhttps://github.com/CrumpLab/quartoCourseBlog\nThe instructions for using this with posit cloud are contained in the repository, just keep scrolling down in the readme.md. The instructions are also re-printed here, along with a video tutorial.\n\n\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile &gt; settings page. Scroll down, click on “&lt;&gt; Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online."
  },
  {
    "objectID": "compendium/privacy.html",
    "href": "compendium/privacy.html",
    "title": "Privacy and sharing",
    "section": "",
    "text": "In this class students have the option of sharing their work online in public forums, such as Github.com. Importantly, public sharing is NOT a requirement of this class and students can also choose to maintain their privacy, or switch between public and private modes. This course document is intended to discuss some of the options for handing in assignments.\nThis class involves learning how to use tools for reproducible data-analysis and visualization that can be shared in public forums, like online repositories. In the first weeks of class the assignment is to set up a personal quarto blog and publish it on github.com. Across the semester students will make contributions to their blog as a method to learn the functions of the quarto system."
  },
  {
    "objectID": "compendium/privacy.html#be-able-to-share-your-work-so-i-can-evaluatereproduce-it",
    "href": "compendium/privacy.html#be-able-to-share-your-work-so-i-can-evaluatereproduce-it",
    "title": "Privacy and sharing",
    "section": "Be able to share your work so I can evaluate/reproduce it",
    "text": "Be able to share your work so I can evaluate/reproduce it\nWhether or not you choose to share your work publicly, it is very important that you can share it with me. This way I can help you assess and improve your own work. Next, I describe some possibilities for public and private sharing so that you can hand in your assignments and I can check them efficiently.\nNote, most of the assignments in this class involve producing working code in a reproducible document, like a blog entry containing working R code for a graph, table, or other behavior. As a result, the ability to “render” or compile the document becomes an important quality check for the work. If the document does not compile, then something is definitely not working. If the document does compile, then you can see the evidence that it is working (e.g., you can see the correct output on your blog). As a result, the gold-standard for each assignment is to submit a working output, and often times a correctly published blog post is part of this demonstration.\nIn other words, when I am assessing your work I want to see that you can compile your own documents. Below I describe some options for this in public or private modes of sharing your work with me."
  },
  {
    "objectID": "compendium/privacy.html#public-mode",
    "href": "compendium/privacy.html#public-mode",
    "title": "Privacy and sharing",
    "section": "Public mode",
    "text": "Public mode\nThis course suggests github.com as a place to share your work publicly. To work in this mode students will create and maintain local folders with their code (on their computer, or on posit cloud), and they will publish them in public repositories on github.com. Students who do this will submit URLs to their github.com assets on Blackboard for each assignment.\nFor example, if you successfully published a quarto blog and you can view the source code on github.com, and view the published blog as a website, you would be able to submit both URLs on blackboard, and I would be able to immediately see what is working or not.\nRemember, anything you put out on github.com in a public folder is publicly viewable by anyone on the internet."
  },
  {
    "objectID": "compendium/privacy.html#private-modes",
    "href": "compendium/privacy.html#private-modes",
    "title": "Privacy and sharing",
    "section": "Private modes",
    "text": "Private modes\nThere are potentially many ways to complete your work in private in this class.\n\npseudonyms\nA simple method could be using a pseudonym account on github.com. I will not share your user name or repository information. In this method you sign up with an account that does not reveal your identity, and you work in public repositories that you share with me on blackboard.\n\n\nPrivate github.com repositories\nIt is possible to set a github.com repository to “private”. In this case the repository will only be accessible to you or other collaborators that you give access to. If you do this, then I will request access to your repository so that I can check your work. In this method, you would still submit links to your work on github, but only people with access to your repository would be able to view the links\n\n\nposit cloud\nYou could use posit cloud for this class, which allows you to run R studio in your web-browser. Posit cloud projects are private by default. However, it is possible to share access privileges with other people. So, you could share your posit cloud account with me, and submit your work by sharing the link to your R studio project on posit cloud\n\n\nother methods\nThere are potentially several other methods that we could explore. For example, you could .zip a folder of your code and upload it directly to a blackboard assignment. We can discuss other methods if necesssary in class."
  },
  {
    "objectID": "compendium/reference_code.html",
    "href": "compendium/reference_code.html",
    "title": "Coding Reference",
    "section": "",
    "text": "This page contains minimal explanations and examples for common coding patterns in base R and tidyverse. Students can make content requests and contribute to this reference page, just leave a message on the github issues for this course repository."
  },
  {
    "objectID": "compendium/reference_code.html#base-r",
    "href": "compendium/reference_code.html#base-r",
    "title": "Coding Reference",
    "section": "Base R",
    "text": "Base R\nBase R refers to intrinsic capabilities of R that come with a fresh installation of R. No additional libraries are needed."
  },
  {
    "objectID": "compendium/reference_code.html#variables",
    "href": "compendium/reference_code.html#variables",
    "title": "Coding Reference",
    "section": "Variables",
    "text": "Variables\na is the variable name. &lt;- is the assignment operator. In this example, 1 is being assigned into the object named a.\n\na &lt;- 1\n\nVariables have classes that describe their contents.\n\nx &lt;- 1\nclass(x)\n#&gt; [1] \"numeric\"\n\ny &lt;- \"1\"\nclass(y)\n#&gt; [1] \"character\"\n\nz &lt;- TRUE\nclass(z)\n#&gt; [1] \"logical\"\n\nClasses allow and disallow some commands. For example, you can’t add a numeric to a character:\n\nx + y\n#&gt; Error in x + y: non-numeric argument to binary operator\n\nClasses can be converted:\n\ny &lt;- as.numeric(y)\nx + y\n#&gt; [1] 2\n\n\nVectors\nVectors are 1-dimensional objects that have a name, and can hold multiple elements of the same class. The number of elements in the vector is the vector length. Manipulating vectors involves creating them, and storing, retrieving, and changing elements inside of the vector.\n\nVector Creation\nThere are multiple ways to create a vector\n\na &lt;- c() # create a NULL vector\na\n#&gt; NULL\n\na &lt;- 1:5 # assign a sequence to a name\na\n#&gt; [1] 1 2 3 4 5\n\na &lt;- c(1, 2, 3, 4, 5) # assign a vector made with combine c()\na\n#&gt; [1] 1 2 3 4 5\n\n#pre-assign an empty vector\na &lt;- vector(mode = \"numeric\", length = 10)\na\n#&gt;  [1] 0 0 0 0 0 0 0 0 0 0\n\na &lt;- vector(mode = \"integer\", length = 10)\na\n#&gt;  [1] 0 0 0 0 0 0 0 0 0 0\n\na &lt;- vector(mode = \"logical\", length = 10)\na\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\na &lt;- vector(mode = \"character\", length = 10)\na\n#&gt;  [1] \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\"\n\nlength() returns the number of elements in the vector\n\na &lt;- c(1,4,5)\nlength(a)\n#&gt; [1] 3\n\n\n\nVector Combination\nIt is possible to combine existing vectors together to make a new vector using c().\n\nx &lt;- 1:5\ny &lt;- 6:10\n\nx\n#&gt; [1] 1 2 3 4 5\ny\n#&gt; [1]  6  7  8  9 10\n\nz &lt;- c(x,y)\nz\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\nHowever, if you attempt to combine vectors of different classes, R will throw an error, or it will coerce (convert) one of the vectors into the class of the other.\n\nx &lt;- 1:5\ny &lt;- c(\"a\",\"b\",\"c\",\"d\",\"e\")\n\nx\n#&gt; [1] 1 2 3 4 5\ny\n#&gt; [1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\nz &lt;- c(x,y)\nz\n#&gt;  [1] \"1\" \"2\" \"3\" \"4\" \"5\" \"a\" \"b\" \"c\" \"d\" \"e\"\n\n\n\nVector Indexing\nVector indexing is the the process of isolating specific positions or elements of a vector. Vector indexing uses the [] notation.\nThe general syntax is vector_name[positions], where vector_name is the name of your vector, and positions is a vector of positions to index.\n\na &lt;- c(23, 34, 45, 56, 67, 78, 89)\n\na[1] # returns the element in position 1\n#&gt; [1] 23\n\na[1:3] # returns elements in positions 1 to 3\n#&gt; [1] 23 34 45\n\na[c(4, 5, 6)]\n#&gt; [1] 56 67 78\n\na[c(1, 1, 1)]\n#&gt; [1] 23 23 23\n\nLogical vectors can indicate positions. In this case, elements in TRUE positions will be returned\n\na &lt;- c(45, 56, 78)\n\na[c(TRUE, FALSE, FALSE)]\n#&gt; [1] 45\n\na[c(FALSE, TRUE, FALSE)]\n#&gt; [1] 56\n\na[c(FALSE, FALSE, TRUE)]\n#&gt; [1] 78\n\n\n\nVector indexing and assignment\nVector indexing can also be used to assign new elements to the indexed positions.\n\na &lt;- c(45, 56, 78)\na\n#&gt; [1] 45 56 78\n\na[3] &lt;- 100\na\n#&gt; [1]  45  56 100\n\na[1:3] &lt;- \"Hello\"\na\n#&gt; [1] \"Hello\" \"Hello\" \"Hello\"\n\n\n\nLogical indexing\nVectors can be indexing using logical comparisons (see section on logic for further explanation and examples of logical comparisons).\n\na &lt;- c(1, 3, 2, 4, 3, 4)\n\na == 4 # create logical vector of positions containing 4\n#&gt; [1] FALSE FALSE FALSE  TRUE FALSE  TRUE\n\n# inserting the above into a[] finds the elements equal to 4\na[a == 4] # elements equal to 4\n#&gt; [1] 4 4\n\na[a &lt; 4] # elements less than 4\n#&gt; [1] 1 3 2 3\n\na[a &lt;= 4] # elements less than or equal to 4\n#&gt; [1] 1 3 2 4 3 4\n\na[a != 1] # elements not equal to 1\n#&gt; [1] 3 2 4 3 4\n\n\n\n\nData.frame\nData.frames are 2-d storage objects, like a table (or excel sheet), they have columns and rows.\n\na &lt;- data.frame() # make an empty data.frame\na\n#&gt; data frame with 0 columns and 0 rows\nclass(a)\n#&gt; [1] \"data.frame\"\n\n\nData.frame creation\nA common method to create a data.frame involves adding existing vectors together. Data.frames are often also created when loading in data files that are 2-d tables. See also the section on using dplyr to manipulate data in dataframes. Data.frames are also similar to data.tables, and tibbles, and can usually be interchanged.\n\nx &lt;- c(1, 2, 3)\ny &lt;- c(\"a\", \"b\", \"c\")\nz &lt;- c(TRUE, TRUE, TRUE)\n\na &lt;- data.frame(x, y, z)\na\n#&gt;   x y    z\n#&gt; 1 1 a TRUE\n#&gt; 2 2 b TRUE\n#&gt; 3 3 c TRUE\n\ndim() returns the number of rows and columns in the data.frame\n\ndim(a)\n#&gt; [1] 3 3\n\n\n\nIndexing by column name\nEach column in a data.frame has a name, and can be accessed using the $ syntax:\n\nnames(a)\n#&gt; [1] \"x\" \"y\" \"z\"\n\na$x\n#&gt; [1] 1 2 3\n\na$y\n#&gt; [1] \"a\" \"b\" \"c\"\n\na$z\n#&gt; [1] TRUE TRUE TRUE\n\n#re-name by assigning a new vector\nnames(a) &lt;- c(\"new_x\", \"Why\", \"Zee\")\na\n#&gt;   new_x Why  Zee\n#&gt; 1     1   a TRUE\n#&gt; 2     2   b TRUE\n#&gt; 3     3   c TRUE\n\na$new_x\n#&gt; [1] 1 2 3\na$Why\n#&gt; [1] \"a\" \"b\" \"c\"\na$Zee\n#&gt; [1] TRUE TRUE TRUE\n\n\n\nIndexing with [rows,columns]\nData.frames have rows and columns, and can be indexed using [rows,columns] notation, where rows is a vector of row numbers, and columns is a vector of column numbers\n\na\n#&gt;   new_x Why  Zee\n#&gt; 1     1   a TRUE\n#&gt; 2     2   b TRUE\n#&gt; 3     3   c TRUE\n\na[1, ] # row 1\n#&gt;   new_x Why  Zee\n#&gt; 1     1   a TRUE\n\na[, 1] # column 1\n#&gt; [1] 1 2 3\n\na[1:2, ] # rows 1 to 2\n#&gt;   new_x Why  Zee\n#&gt; 1     1   a TRUE\n#&gt; 2     2   b TRUE\n\na[, 1:2] # columns 1 to 2\n#&gt;   new_x Why\n#&gt; 1     1   a\n#&gt; 2     2   b\n#&gt; 3     3   c\n\na[1:2, 1:2] #rows 1 to 2 and columns 1 to 2\n#&gt;   new_x Why\n#&gt; 1     1   a\n#&gt; 2     2   b\n\na[1:2, 'new_x'] # Column names can be used\n#&gt; [1] 1 2\n\n\n\nrow and column binding\nIt is possible to add more rows using rbind(), and add more columns using cbind().\n\n# row bind a copy of a to itself\na\n#&gt;   new_x Why  Zee\n#&gt; 1     1   a TRUE\n#&gt; 2     2   b TRUE\n#&gt; 3     3   c TRUE\na &lt;- rbind(a, a)\ndim(a)\n#&gt; [1] 6 3\n\n# create a new vector, add it as a new column\nmy_new &lt;- c(1, 4, 3, 2, 4, 5)\na &lt;- cbind(a, my_new)\na\n#&gt;   new_x Why  Zee my_new\n#&gt; 1     1   a TRUE      1\n#&gt; 2     2   b TRUE      4\n#&gt; 3     3   c TRUE      3\n#&gt; 4     1   a TRUE      2\n#&gt; 5     2   b TRUE      4\n#&gt; 6     3   c TRUE      5\n\n\n\nIndexing and assignment\nThe elements in a data.frame can be re-assigned by your_dataframe[row:position] &lt;- new stuff. It is generally necessary that any new elements have the same class as the original elements\n\na\n#&gt;   new_x Why  Zee my_new\n#&gt; 1     1   a TRUE      1\n#&gt; 2     2   b TRUE      4\n#&gt; 3     3   c TRUE      3\n#&gt; 4     1   a TRUE      2\n#&gt; 5     2   b TRUE      4\n#&gt; 6     3   c TRUE      5\n\na[, 1] &lt;- 5 #assign column 1 all 5s\n\na$Why &lt;- c(\"new\", \"words\", \"are\", \"going\", \"in\", \"here\")\na\n#&gt;   new_x   Why  Zee my_new\n#&gt; 1     5   new TRUE      1\n#&gt; 2     5 words TRUE      4\n#&gt; 3     5   are TRUE      3\n#&gt; 4     5 going TRUE      2\n#&gt; 5     5    in TRUE      4\n#&gt; 6     5  here TRUE      5\n\na[6, 3] &lt;- FALSE # row 6, column 3\na\n#&gt;   new_x   Why   Zee my_new\n#&gt; 1     5   new  TRUE      1\n#&gt; 2     5 words  TRUE      4\n#&gt; 3     5   are  TRUE      3\n#&gt; 4     5 going  TRUE      2\n#&gt; 5     5    in  TRUE      4\n#&gt; 6     5  here FALSE      5\n\n\n\nLogical indexing\nIt is also possible to index a data.frame with logical comparisons. For example, the following returns rows where the value in column my_new equals a 4\n\na[a$my_new == 4, ]\n#&gt;   new_x   Why  Zee my_new\n#&gt; 2     5 words TRUE      4\n#&gt; 5     5    in TRUE      4\n\n\n\n\nLists\nLists are objects that can store more arbitrary elements of any class, including vectors, dataframes, and even more lists. Lists are commonly used to store results from a model, especially when the model returns many different kinds of results in different formats.\nHere we create a list with three elements, a scalar, a vector, and a dataframe.\n\nx &lt;- 1\ny &lt;- c(1, 2, 3, 4, 5)\nz &lt;- data.frame(a = 1:5, b = 1:5, c = 1:5)\nmy_list &lt;- list(x, y, z)\n\nmy_list\n#&gt; [[1]]\n#&gt; [1] 1\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 1 2 3 4 5\n#&gt; \n#&gt; [[3]]\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n\n\nList indexing\nAccess elements in the list using [[]]\n\nmy_list[[1]]\n#&gt; [1] 1\n\nmy_list[[2]]\n#&gt; [1] 1 2 3 4 5\n\nmy_list[[3]]\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n\n\n\nNamed elements\nElements in a list can be given names, and indexed by name:\n\nx &lt;- 1\ny &lt;- c(1, 2, 3, 4, 5)\nz &lt;- data.frame(a = 1:5, b = 1:5, c = 1:5)\nmy_list &lt;- list(ex = x, why = y, zee =  z)\n\nmy_list\n#&gt; $ex\n#&gt; [1] 1\n#&gt; \n#&gt; $why\n#&gt; [1] 1 2 3 4 5\n#&gt; \n#&gt; $zee\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n\nmy_list$ex\n#&gt; [1] 1\nmy_list$why\n#&gt; [1] 1 2 3 4 5\nmy_list$zee\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n\nmy_list[[\"ex\"]]\n#&gt; [1] 1\nmy_list[[\"why\"]]\n#&gt; [1] 1 2 3 4 5\nmy_list[[\"zee\"]]\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n\n\n\nAdd/Remove elements in lists\nIt is possible to assign new names elements to a list, e.g.:\n\nmy_list[[\"new_thing\"]] &lt;- 12345\n\nmy_list\n#&gt; $ex\n#&gt; [1] 1\n#&gt; \n#&gt; $why\n#&gt; [1] 1 2 3 4 5\n#&gt; \n#&gt; $zee\n#&gt;   a b c\n#&gt; 1 1 1 1\n#&gt; 2 2 2 2\n#&gt; 3 3 3 3\n#&gt; 4 4 4 4\n#&gt; 5 5 5 5\n#&gt; \n#&gt; $new_thing\n#&gt; [1] 12345\n\n#set an element to NULL removes it\nmy_list[[\"zee\"]] &lt;- NULL\n\nmy_list\n#&gt; $ex\n#&gt; [1] 1\n#&gt; \n#&gt; $why\n#&gt; [1] 1 2 3 4 5\n#&gt; \n#&gt; $new_thing\n#&gt; [1] 12345"
  },
  {
    "objectID": "compendium/reference_code.html#logic",
    "href": "compendium/reference_code.html#logic",
    "title": "Coding Reference",
    "section": "Logic",
    "text": "Logic\nLogic statements are used to compare two things, or two sets of things. The output of comparison is a TRUE or FALSE statment. If many things are being compared at once, the output could be many TRUE or FALSE statements for each comparison\n\nequal to ==\n\n1 == 1 # is 1 equal to 1?\n#&gt; [1] TRUE\n1 == 2 # is 1 equal to 2?\n#&gt; [1] FALSE\n\nc(1, 2, 3) == c(2, 1, 3) # compares each element with each element\n#&gt; [1] FALSE FALSE  TRUE\n1 == c(2, 1, 3)\n#&gt; [1] FALSE  TRUE FALSE\n\n\n\nnot equal to !=\n\n1 != 1 # is 1 equal to 1?\n#&gt; [1] FALSE\n1 != 2 # is 1 equal to 2?\n#&gt; [1] TRUE\n\nc(1, 2, 3) != c(2, 1, 3) # compares each element with each element\n#&gt; [1]  TRUE  TRUE FALSE\n1 != c(2, 1, 3)\n#&gt; [1]  TRUE FALSE  TRUE\n\n\n\nGreater than/ less than\n\n\n1 &gt; 1 # is 1 greater than 1?\n#&gt; [1] FALSE\n5 &gt; 1 # is 5 greater than 1?\n#&gt; [1] TRUE\n3 &lt; 2 # is 3 less than 2?\n#&gt; [1] FALSE\n3 &lt; 1 # is 3 less than 1?\n#&gt; [1] FALSE\n\nc(1, 2, 3) &gt; c(2, 1, 3) # ask the question element by element\n#&gt; [1] FALSE  TRUE FALSE\nc(1, 2, 3) &lt; c(2, 1, 3)\n#&gt; [1]  TRUE FALSE FALSE\n\n2 &gt; c(1, 2, 3) # is greater than each of the numbers\n#&gt; [1]  TRUE FALSE FALSE\n\n\n\n&gt;= &lt;=\nIs something greater than or equal to something else\n\n1 &gt;= 1 # is 1 greater than 1?\n#&gt; [1] TRUE\n5 &gt;= 1 # is 5 greater than 1?\n#&gt; [1] TRUE\n3 &lt;= 2 # is 3 less than 2?\n#&gt; [1] FALSE\n3 &lt;= 1 # is 3 less than 1?\n#&gt; [1] FALSE\n\nc(1, 2, 3) &gt;= c(2, 1, 3) # ask the question element by element\n#&gt; [1] FALSE  TRUE  TRUE\nc(1, 2, 3) &lt;= c(2, 1, 3)\n#&gt; [1]  TRUE FALSE  TRUE\n\n2 &gt;= c(1, 2, 3) # is greater than each of the numbers\n#&gt; [1]  TRUE  TRUE FALSE\n\n\n\nAND\nThe ampersand & is used for AND, which allows use to evaluate whether two or more properties are all TRUE.\n\n# is 16 divisible by 4 AND 8\n16 %% 4 == 0 & 16 %% 8 == 0\n#&gt; [1] TRUE\n\n# is 16 divisible by 4 AND 3\n16 %% 4 == 0 & 16 %% 3 == 0\n#&gt; [1] FALSE\n\n# is 16 divisible by 8 and 4 and 2\n16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0\n#&gt; [1] TRUE\n\n\n\nOR\nThe | is used for OR, which allows use to evaluate at least one of the properties is TRUE.\n\n# is 16 divisible by 4 OR 8\n16 %% 4 == 0 | 16 %% 8 == 0\n#&gt; [1] TRUE\n\n# is 16 divisible by 4 OR 3\n# it is divisible by 4, so the answer is TRUE\n# because at least one of the comparisons is TRUE\n16 %% 4 == 0 | 16 %% 3 == 0\n#&gt; [1] TRUE\n\n\n\nTRUE FALSE\nWhen R returns values as TRUE or FALSE, it return a logical variable. It also treats TRUE as a 1, and FALSE as a 0. In the example below we see it is possible sum up a logical variable with multiple TRUE and FALSE entries.\n\nc(1, 2, 3) == c(1, 2, 3)\n#&gt; [1] TRUE TRUE TRUE\nsum(c(1, 2, 3) == c(1, 2, 3))\n#&gt; [1] 3\n\nc(1, 2, 3) == c(2, 1, 3)\n#&gt; [1] FALSE FALSE  TRUE\nsum(c(1, 2, 3) == c(2, 1, 3))\n#&gt; [1] 1"
  },
  {
    "objectID": "compendium/reference_code.html#if-else",
    "href": "compendium/reference_code.html#if-else",
    "title": "Coding Reference",
    "section": "IF ELSE",
    "text": "IF ELSE\nA roller-coaster operator checks if people are taller than a line to see if they can ride the coaster. This is an IF ELSE control structure. IF the person is taller than the line, then they can go on the ride; ELSE (otherwise) the person can not go on the ride.\nIn other words, IF the situation is X, then do something; ELSE (if the situation is not X), then do something different.\nIF and ELSE statements let us specify the conditions when specific actions are taken. Generally, IF and ELSE statements are used inside loops (for, or while, or repeat loops), because at each step or iteration of the loop, we want to check something, and then do something.\nConsider this:\n\na &lt;- 1 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n#&gt; [1] 1\n\n\na &lt;- 2 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n#&gt; [1] \"A is not 1\"\n\nNormally we find IF and ELSE in a loop like this:\n\na &lt;- c(1, 0, 1, 0, 0, 0, 1) # make a variable contain 1s and 0s\n\n# write a loop to check each element in the variable\n# and do different things depending on the element\n\nfor (i in a) {\n  if (i == 1) {\n    print(\"I'm a 1\") # what to do when i is 1\n  } else {\n    print(\"I'm not a 1\") # what to do when i is not 1\n  }\n}\n#&gt; [1] \"I'm a 1\"\n#&gt; [1] \"I'm not a 1\"\n#&gt; [1] \"I'm a 1\"\n#&gt; [1] \"I'm not a 1\"\n#&gt; [1] \"I'm not a 1\"\n#&gt; [1] \"I'm not a 1\"\n#&gt; [1] \"I'm a 1\"\n\nWe can have multiple conditions in our if statements. See the next section on loops for more info about using loops.\n\na &lt;- c(1, 2, 3, 1, 2, 0, 1) # make a variable contain 1s and 0s\n\n# write a loop to check each element in the variable\n# and do different things depending on the element\n\nfor (i in a) {\n  if (i == 1) {\n    print(\"I'm a 1\") # what to do when i is 1\n  } else if (i == 2) {\n    print(\"I'm a 2\") # what to do when i is 2\n  } else if (i == 3) {\n    print(\"I'm a 3\") # what to do when i is 3\n  } else {\n    print(\"I'm not any of the above\") #what to do when none are true\n  }\n}\n#&gt; [1] \"I'm a 1\"\n#&gt; [1] \"I'm a 2\"\n#&gt; [1] \"I'm a 3\"\n#&gt; [1] \"I'm a 1\"\n#&gt; [1] \"I'm a 2\"\n#&gt; [1] \"I'm not any of the above\"\n#&gt; [1] \"I'm a 1\""
  },
  {
    "objectID": "compendium/reference_code.html#loops",
    "href": "compendium/reference_code.html#loops",
    "title": "Coding Reference",
    "section": "Loops",
    "text": "Loops\nCheck R help for on Control Flow ?Control.\nfor(){} for(loop control){do something each iteration}\n\nfor(iterator in vector) {\n  #do something\n}\n\nLoop control is defined in between the parentheses. The name of the iterator is placed on the left of in(can be assigned any name you want, does not need to be declared in advance). During the execution of the loop, the iterator takes on the values inside the vector which is placed on the right side of in. Specifically, the following is happening.\nLoop steps: 1. iterator &lt;- vector[1] 2. iterator &lt;- vector[2] 3. iterator &lt;- vector[3] 4. etc.\nThe loop will automatically stop once it reaches the last item in the vector. The loop can be stopped before that using the break command.\n\n# Make a loop do something 5 times\n# i is the iterator\n# 1:5 creates a vector with 5 numbers in it, 1, 2, 3, 4, 5\n# the loop will run 5 times, because there are five things to assign to i\nfor(i in 1:5) {\n  print(\"hello\")\n}\n#&gt; [1] \"hello\"\n#&gt; [1] \"hello\"\n#&gt; [1] \"hello\"\n#&gt; [1] \"hello\"\n#&gt; [1] \"hello\"\n\n\n# show the value of i each step of the loop\nfor(i in 1:5) {\n  print(i)\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n# define the vector to loop over in advance\nx &lt;- 1:5\nfor (i in x) {\n  print(i)\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n# Reminder that i becomes the next value in the vector\n# your vector can have any order \nmy_sequence &lt;- c(1, 5, 2, 3, 4)\nfor (i in my_sequence) {\n  print(i)\n}\n#&gt; [1] 1\n#&gt; [1] 5\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n\n\n# index vector does not need to be numbers\nmy_things &lt;- c(\"A\", \"B\", \"C\", \"D\")\nfor (i in my_things) {\n  print(i)\n}\n#&gt; [1] \"A\"\n#&gt; [1] \"B\"\n#&gt; [1] \"C\"\n#&gt; [1] \"D\"\n\n\nBreaking a loop\nbreak stops a loop. Used with logical statements to define the conditions necessary to cause the break.\n\nfor(i in 1:10) {\n  if (i &lt; 5) {\n    print(i)\n  } else{\n    break\n  }\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n\n\n\nWhile loops\nWhile loops run until a logical condition is met. Here there is no iterator, just a logic statement that needs to be met.\nThis one prints i while i is less than 6. As soon as i becomes “not less than 6”, then the loop stops. Critically, inside the loop, the value of i increases each iteration.\n\ni &lt;- 1 # create an variable\nwhile (i &lt; 6) {\n  print(i)\n  i = i + 1 #add one eachs step of the loop\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\nRepeat loops\nSimilar to while, but let’s do things until a condition is met.\n\ni &lt;- 0\nrepeat {\n  i &lt;- i + 1\n  print(i)\n  if (i == 5) {\n    break\n  }\n}\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\n\n\nExamples\nBraces are not needed on one line\n\nfor(i in 1:5) print(i)\n#&gt; [1] 1\n#&gt; [1] 2\n#&gt; [1] 3\n#&gt; [1] 4\n#&gt; [1] 5\n\nUsing the value of the iterator to assign in values systematically to another variable.\n\n# put 1 into the first five positions of x\nx &lt;- c() # create empty vector\nfor (i in 1:5) {\n  x[i] &lt;- 1  # assign 1 to the ith slot in x\n}\nx\n#&gt; [1] 1 1 1 1 1\n\n# put the numbers 1-5 in the first 5 positions of x\nx &lt;- c()\nfor (i in 1:5) {\n  x[i] &lt;- i\n}\nx\n#&gt; [1] 1 2 3 4 5\n\nMake your own counter, when you need one\n\na &lt;- c(1, 4, 3, 5, 7, 6, 8, 2)\nodd &lt;- c()\ncounter &lt;- 0\nfor (i in a) {\n  # i will the values of a in each position\n  counter &lt;- counter + 1\n  if (i %% 2 != 0) {\n    odd[counter] &lt;- \"odd\"\n  } else {\n    odd[counter] &lt;- \"even\"\n  }\n}\nodd\n#&gt; [1] \"odd\"  \"even\" \"odd\"  \"odd\"  \"odd\"  \"even\" \"even\" \"even\"\n\n# An alternative strategy\n\na &lt;- c(1, 4, 3, 5, 7, 6, 8, 2)\nodd &lt;- c()\n# 1:length(a) creates a sequence from 1 to length\nfor (i in 1:length(a)) {\n  if (a[i] %% 2 != 0) {\n    odd[i] &lt;- \"odd\"\n  } else {\n    odd[i] &lt;- \"even\"\n  }\n}\nodd\n#&gt; [1] \"odd\"  \"even\" \"odd\"  \"odd\"  \"odd\"  \"even\" \"even\" \"even\"\n\nNesting loops\n\n\nfor(i in 1:5) {\n  for (j in 1:5) {\n    print(c(i, j))\n  }\n}\n#&gt; [1] 1 1\n#&gt; [1] 1 2\n#&gt; [1] 1 3\n#&gt; [1] 1 4\n#&gt; [1] 1 5\n#&gt; [1] 2 1\n#&gt; [1] 2 2\n#&gt; [1] 2 3\n#&gt; [1] 2 4\n#&gt; [1] 2 5\n#&gt; [1] 3 1\n#&gt; [1] 3 2\n#&gt; [1] 3 3\n#&gt; [1] 3 4\n#&gt; [1] 3 5\n#&gt; [1] 4 1\n#&gt; [1] 4 2\n#&gt; [1] 4 3\n#&gt; [1] 4 4\n#&gt; [1] 4 5\n#&gt; [1] 5 1\n#&gt; [1] 5 2\n#&gt; [1] 5 3\n#&gt; [1] 5 4\n#&gt; [1] 5 5\n\n# example of using nested loops to fill the contents\n# of a matrix\n\nmy_matrix &lt;- matrix(0, ncol = 5, nrow = 5)\nfor (i in 1:5) {\n  for (j in 1:5) {\n    my_matrix[i, j] &lt;- i * j\n  }\n}\nmy_matrix\n#&gt;      [,1] [,2] [,3] [,4] [,5]\n#&gt; [1,]    1    2    3    4    5\n#&gt; [2,]    2    4    6    8   10\n#&gt; [3,]    3    6    9   12   15\n#&gt; [4,]    4    8   12   16   20\n#&gt; [5,]    5   10   15   20   25\n\nbreak exits out of the immediate loop\n\n# the inside loop stops when i+j is greater than 5\n# the outside loop keeps going\n\nsum_of_i_j &lt;- c()\ncounter &lt;- 0\nfor (i in 1:5) {\n  for (j in 1:5) {\n    counter &lt;- counter + 1\n    sum_of_i_j[counter] &lt;- i + j\n    if (i + j &gt; 5) {\n      break\n    }\n  }\n}\nsum_of_i_j\n#&gt;  [1] 2 3 4 5 6 3 4 5 6 4 5 6 5 6 6"
  },
  {
    "objectID": "compendium/reference_code.html#functions",
    "href": "compendium/reference_code.html#functions",
    "title": "Coding Reference",
    "section": "Functions",
    "text": "Functions\nThis section discusses the syntax for writing custom functions in R.\n\nfunction syntax\n\nfunction_name &lt;- function(input1, input2) {\n  #code here\n  return(something)\n}\n\n\n\nexample functions\nThis function has no input between the (). Whenever you run this function, it will simply return whatever is placed inside the return statement.\n\n# define the function\nprint_hello_world &lt;- function() {\n  return(print(\"hello world\"))\n}\n\n# use the function\nprint_hello_world()\n#&gt; [1] \"hello world\"\n\nThis function simply takes an input, and then returns the input without modifying it.\n\nreturn_input &lt;- function(input) {\n  return(input)\n}\n\n# the variable input is assigned a 1\n# then we return(input), which will result in a 1\n# because the function internally assigns 1 to the input\nreturn_input(1)\n#&gt; [1] 1\n\na &lt;- \"something\"\nreturn_input(a)\n#&gt; [1] \"something\"\n\nThis function takes an input, then creates an internal variable called temp and assigns input+1. Then the contents of temp is returned. Note there, is no checking of the input, so it will return an erro if you input a character (can’t add one to a character in R)\n\nadd_one &lt;- function(input) {\n  temp &lt;- input + 1\n  return(temp)\n}\n\nadd_one(1)\n#&gt; [1] 2\nadd_one(\"a\")\n#&gt; Error in input + 1: non-numeric argument to binary operator\n\nThis function adds some input checking. We only add one if the input is a numeric type. Otheriwse, we use stop() to return an error message to the console\n\nadd_one &lt;- function(input) {\n  if (class(input) == \"numeric\") {\n    temp &lt;- input + 1\n    return(temp)\n  } else {\n    return(stop(\"input must be numeric\"))\n  }\n}\n\nadd_one(1)\n#&gt; [1] 2\nadd_one(\"a\")\n#&gt; Error in add_one(\"a\"): input must be numeric\n\nA function with three inputs\n\nadd_multiply &lt;- function(input, x_plus, x_times) {\n  temp &lt;- (input + x_plus) * x_times\n  return(temp)\n}\n\n# input is 1\n# x_plus &lt;- 2\n# x_times &lt;- 3\n# will return (1+2)*3 = 9\nadd_multiply(1, 2, 3)\n#&gt; [1] 9"
  },
  {
    "objectID": "compendium/reference_code.html#tidyverse",
    "href": "compendium/reference_code.html#tidyverse",
    "title": "Coding Reference",
    "section": "Tidyverse",
    "text": "Tidyverse\nThe tidyverse is a set of popular R packages that are convenient for many aspects of data-analysis. All of the tidyverse packages can be installed in one go:\n\ninstall.packages(\"tidyverse\")"
  },
  {
    "objectID": "compendium/reference_code.html#dplyr",
    "href": "compendium/reference_code.html#dplyr",
    "title": "Coding Reference",
    "section": "dplyr",
    "text": "dplyr\nThe dplyr package has several useful functions for manipulating and summarizing data.frames. To illustrate some dplyr functionality we first create a small fake data.frame. Here is a link to the dplyr cheatsheet\n\nsubjects &lt;- rep(1:10)\ngrades &lt;- rnorm(n = 10, mean = 65, sd = 5)\nage &lt;- sample(18:20, 10, replace = TRUE)\nlikes_chocolate &lt;- sample(c(TRUE, FALSE), 10, replace = TRUE)\nfavorite_color &lt;-\n  sample(c(\"r\", \"o\", \"y\", \"g\", \"b\", \"i\", \"v\"), 10, replace = TRUE)\n\nfake_data &lt;- data.frame(subjects,\n                        grades,\n                        age,\n                        likes_chocolate,\n                        favorite_color)\n\nknitr::kable(head(fake_data))\n\n\n\n\nsubjects\ngrades\nage\nlikes_chocolate\nfavorite_color\n\n\n\n\n1\n63.99251\n18\nFALSE\nr\n\n\n2\n70.39253\n18\nTRUE\ng\n\n\n3\n65.72380\n20\nTRUE\ni\n\n\n4\n58.54882\n19\nFALSE\ng\n\n\n5\n58.35419\n18\nFALSE\nv\n\n\n6\n60.67249\n19\nFALSE\no\n\n\n\n\n\n\ngroup_by and summarize\ngroup_by() allows you to specify columns to split into groups for analysis, these groups are the levels of the column (e.g., unique entries in the column)\nsummarize() conducts an analysis for each group identified in the group_by step. The analysis is defined by variable names, and supplying a function that computes a value given the name of a measurement variable.\n\nlibrary(dplyr)\n#&gt; \n#&gt; Attaching package: 'dplyr'\n#&gt; The following objects are masked from 'package:stats':\n#&gt; \n#&gt;     filter, lag\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\nfake_data %&gt;%\n  group_by(likes_chocolate) %&gt;%\n  summarize(mean_grade = mean(grades),\n            sd_grad = sd(grades))\n#&gt; # A tibble: 2 × 3\n#&gt;   likes_chocolate mean_grade sd_grad\n#&gt;   &lt;lgl&gt;                &lt;dbl&gt;   &lt;dbl&gt;\n#&gt; 1 FALSE                 60.9    2.55\n#&gt; 2 TRUE                  66.4    3.13\n\nfake_data %&gt;%\n  group_by(likes_chocolate, age) %&gt;%\n  summarize(mean_grade = mean(grades),\n            sd_grad = sd(grades))\n#&gt; `summarise()` has grouped output by 'likes_chocolate'. You can override using\n#&gt; the `.groups` argument.\n#&gt; # A tibble: 5 × 4\n#&gt; # Groups:   likes_chocolate [2]\n#&gt;   likes_chocolate   age mean_grade sd_grad\n#&gt;   &lt;lgl&gt;           &lt;int&gt;      &lt;dbl&gt;   &lt;dbl&gt;\n#&gt; 1 FALSE              18       61.2    3.99\n#&gt; 2 FALSE              19       60.7    2.22\n#&gt; 3 TRUE               18       67.1    4.25\n#&gt; 4 TRUE               19       65.3   NA   \n#&gt; 5 TRUE               20       65.7   NA\n\n\n\nfilter\nFilter out rows depending on logical comparisons\n\nfake_data %&gt;%\n  filter(grades &lt; 65)\n#&gt;   subjects   grades age likes_chocolate favorite_color\n#&gt; 1        1 63.99251  18           FALSE              r\n#&gt; 2        4 58.54882  19           FALSE              g\n#&gt; 3        5 58.35419  18           FALSE              v\n#&gt; 4        6 60.67249  19           FALSE              o\n#&gt; 5        9 62.99181  19           FALSE              y\n#&gt; 6       10 62.27204  18            TRUE              y\n\nfake_data %&gt;%\n  filter(grades &lt; 65,\n         likes_chocolate == TRUE)\n#&gt;   subjects   grades age likes_chocolate favorite_color\n#&gt; 1       10 62.27204  18            TRUE              y\n\n\n\nselect\nSelect specific columns\n\nfake_data %&gt;%\n  select(grades)\n#&gt;      grades\n#&gt; 1  63.99251\n#&gt; 2  70.39253\n#&gt; 3  65.72380\n#&gt; 4  58.54882\n#&gt; 5  58.35419\n#&gt; 6  60.67249\n#&gt; 7  65.30154\n#&gt; 8  68.51417\n#&gt; 9  62.99181\n#&gt; 10 62.27204\n\nfake_data %&gt;%\n  select(grades,likes_chocolate)\n#&gt;      grades likes_chocolate\n#&gt; 1  63.99251           FALSE\n#&gt; 2  70.39253            TRUE\n#&gt; 3  65.72380            TRUE\n#&gt; 4  58.54882           FALSE\n#&gt; 5  58.35419           FALSE\n#&gt; 6  60.67249           FALSE\n#&gt; 7  65.30154            TRUE\n#&gt; 8  68.51417            TRUE\n#&gt; 9  62.99181           FALSE\n#&gt; 10 62.27204            TRUE\n\n\n\nmutate\nmutate() can add a column\n\nfake_data &lt;- fake_data %&gt;%\n  mutate(new_thing = 0)\n\nfake_data\n#&gt;    subjects   grades age likes_chocolate favorite_color new_thing\n#&gt; 1         1 63.99251  18           FALSE              r         0\n#&gt; 2         2 70.39253  18            TRUE              g         0\n#&gt; 3         3 65.72380  20            TRUE              i         0\n#&gt; 4         4 58.54882  19           FALSE              g         0\n#&gt; 5         5 58.35419  18           FALSE              v         0\n#&gt; 6         6 60.67249  19           FALSE              o         0\n#&gt; 7         7 65.30154  19            TRUE              v         0\n#&gt; 8         8 68.51417  18            TRUE              o         0\n#&gt; 9         9 62.99181  19           FALSE              y         0\n#&gt; 10       10 62.27204  18            TRUE              y         0"
  },
  {
    "objectID": "compendium/reference_code.html#ggplot2",
    "href": "compendium/reference_code.html#ggplot2",
    "title": "Coding Reference",
    "section": "ggplot2",
    "text": "ggplot2\nggplot2 is a library created by Hadley Wickham for plotting and graphing results, and refers to a “grammar of graphics”, or a standardized syntax and organization for graphing.\n\nggplot2 additional resources\n\nhttps://ggplot2.tidyverse.org\nhttps://r4ds.had.co.nz/data-visualisation.html\nhttps://ggplot2-book.org\nhttp://r-statistics.co/ggplot2-Tutorial-With-R.html\nhttps://datacarpentry.org/R-ecology-lesson/04-visualization-ggplot2.html\n\n\nAdd-on packages\n\nhttps://www.ggplot2-exts.org A repository of 50+ add on packages for ggplot2\nhttps://gganimate.com\n\nallows you to create animated .gifs of ggplots\nI made a bunch of animated gifs for a statistics textbook. They are all here along with the code https://crumplab.github.io/statistics/gifs.html\n\nggrepel allows you to repel overlapping text labels away from each other.\nesquisse a GUI (graphic user interface) that allows you make ggplot graphs using drag-drop, and clickable options\nggedit similar to above, clickable editing of ggplot graphs\nplotly a package similar to ggplot, makes a whole variety of graphs, mainly for use in websites. Allows interactive graphs.\n\nAs an example, I used plotly on my publications website, if you hover over the dots, info pops up https://crumplab.github.io/Publications.html.\n\nggpubr (install from CRAN), many useful things, including the ggarrange function which allows you to knit multiple plots together\nggthemes extra themes, scales, and geoms\n\n\n\n\nExample code\nRemember to load the ggplot2 library before you use ggplot2.\n\nlibrary(ggplot2)\n\n\n\nScatterplot\n\n# Create dataframe\na &lt;- c(1, 2, 3, 2, 3, 4, 5, 4)\nb &lt;- c(4, 3, 4, 3, 2, 1, 2, 3)\nplot_df &lt;- data.frame(a, b)\n\n# basic scatterplot\nggplot(plot_df, aes(x = a, y = b)) +\n  geom_point()\n\n\n\n\n# customize, add regression line\nggplot(plot_df, aes(x = a, y = b)) +\n  geom_point(size = 2) +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim = c(0, 7), ylim = c(0, 10)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"I made a scatterplot\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n#&gt; `geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nbar graph\n1 factor\n\n#Create a dataframe\nfactor_one &lt;- as.factor(c(\"A\", \"B\", \"C\"))\ndv_means &lt;- c(20, 30, 40)\ndv_SEs   &lt;- c(4, 3.4, 4)\nplot_df &lt;- data.frame(factor_one,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df, aes(x = factor_one, y = dv_means)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\n# adding error bars, customizing\n\nggplot(plot_df, aes(x = factor_one, y = dv_means)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = dv_means - dv_SEs,\n                    ymax = dv_means + dv_SEs),\n                width = .2) +\n  coord_cartesian(ylim = c(0, 100)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"I made a bar graph\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n2 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(as.factor(c(\"A\", \"B\", \"C\")), 2)\nfactor_two &lt;- rep(as.factor(c(\"IIA\", \"IIB\")), 3)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n       aes(\n         x = factor_one,\n         y = dv_means,\n         group = factor_two,\n         color = factor_two\n       )) +\n  geom_bar(stat = \"identity\", position = \"dodge\")\n\n\n\n\n# adding error bars, customizing\n\nggplot(\n  plot_df,\n  aes(\n    x = factor_one,\n    y = dv_means,\n    group = factor_two,\n    color = factor_two,\n    fill = factor_two\n  )\n) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_errorbar(\n    aes(ymin = dv_means - dv_SEs,\n        ymax = dv_means + dv_SEs),\n    position = position_dodge(width = 0.9),\n    width = .2,\n    color = \"black\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"Bar graph 2 factors\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n3 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(rep(as.factor(c(\"A\", \"B\", \"C\")), 2), 2)\nfactor_two &lt;- rep(rep(as.factor(c(\"IIA\", \"IIB\")), 3), 2)\nfactor_three &lt;- rep(as.factor(c(\"IIIA\", \"IIIB\")), each = 6)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40,\n              10, 20, 50, 50, 10, 10)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4,\n              1, 2, 1, 2, 3, 2)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      factor_three,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n       aes(\n         x = factor_one,\n         y = dv_means,\n         group = factor_two,\n         color = factor_two\n       )) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap( ~ factor_three)\n\n\n\n\n\n\nLine Graph\n1 factor\n\n#Create a dataframe\nfactor_one &lt;- as.factor(c(\"A\",\"B\",\"C\"))\ndv_means &lt;- c(20,30,40)\ndv_SEs   &lt;- c(4,3.4,4)\nplot_df &lt;- data.frame(factor_one,\n                      dv_means,\n                      dv_SEs)\n\n# basic line graph\n\nggplot(plot_df, aes(x=factor_one,y=dv_means, group=1))+\n  geom_point()+\n  geom_line()\n\n\n\n\n# adding error bars, customizing\n\nggplot(plot_df, aes(x=factor_one,y=dv_means, group=1))+\n  geom_point()+\n  geom_line()+\n  geom_errorbar(aes(ymin=dv_means-dv_SEs,\n                    ymax=dv_means+dv_SEs),\n                width=.2)+\n  coord_cartesian(ylim=c(0,100))+\n  xlab(\"x-axis label\")+\n  ylab(\"y-axis label\")+\n  ggtitle(\"I made a line graph\")+\n  theme_classic(base_size=12)+\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n2 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(as.factor(c(\"A\",\"B\",\"C\")),2)\nfactor_two &lt;- rep(as.factor(c(\"IIA\",\"IIB\")),3)\ndv_means &lt;- c(20,30,40,20,40,40)\ndv_SEs   &lt;- c(4,3.4,4,3,2,4)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      dv_means,\n                      dv_SEs)\n\n# basic line graph\n\nggplot(plot_df, aes(x=factor_one,y=dv_means,\n                    group=factor_two,\n                    color=factor_two,\n                    linetype=factor_two))+\n  geom_point()+\n  geom_line()\n\n\n\n\n\n\nHistogram\nbase R\n\na&lt;-rnorm(100,0,1)\nhist(a)\n\n\n\n\n\nscore &lt;- rnorm(100,0,1)\nn &lt;- 1:100\nplot_df &lt;- data.frame(score,n)\n\nggplot(plot_df, aes(x=score))+\n  geom_histogram(bins=10,\n                 color=\"white\")"
  },
  {
    "objectID": "compendium/reference_code.html#knitr",
    "href": "compendium/reference_code.html#knitr",
    "title": "Coding Reference",
    "section": "knitr",
    "text": "knitr\nknitr is a package used to compile R markdown documents into other formats such as html (webpages) or pdf.\n\nknitting to pdf\nA latex installation is required in order to knit to pdf. Latex is also free and cross-platform, however a complete installation is can be quite large.\nI think the advice by Frederick Aust (an author of the papaja package) for installing latex is worth following:\n\nhttps://crsh.github.io/papaja_man/introduction.html#getting-started\n\nBasically, the advice is to install a complete tex distribution (follow the above for links), or to use the tinytex package in R. The tinytex package should be sufficient for most knitting to pdf duties.\n\nInstall the tinytex library:\n\ninstall.packages(\"tinytex\")\n\nRun this command after installing the library\n\ntinytex::install_tex()\n\n\nknitr options\nWhen you create a new R Markdown document you will see the following code chunk underneath the yaml, at the beginning of the document. It usually looks like this:\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\nThis chunk is named setup, it is not printed in your output, but it controls the global setup options for the whole document. Any option you set here applies to all of the remaining code chunks you create. It’s a way of setting defaults.\nHere are some helpful defaults you can add. You turn the option on with TRUE, and turn it off with FALSE.\n\necho=TRUE sets the default to print all remaining code blocks to the output, FALSE sets the default to not print the code blocks\nwarning = FALSE turns off printing of warnings\nmessage = FALSE turns off printing of messages, these commonly occur when you load a package, where you receive a message that the package was loaded\neval = FALSE sets the default to NOT evaluate the code chunk as R Code. This will not run the code block, but the code block will still print if echo=TRUE\nerror=TRUE normally the knit fails when there is an error in the code. If you set error=TRUE the knit will complete, and return an error message for code blocks with errors.\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE,\n                      warning = FALSE,\n                      message = FALSE, \n                      eval = FALSE,\n                      error = TRUE)\n```\n\n\nknitr figure output defaults\nThe following setup options are useful for figure output.\n\nfig.width = 3 sets the default width in inches for all figures\nfig.height = 3 sets the default height in inches for all figures\nfig.path = \"myfigs/\" defines folder where figure files will be saved. This will be relative to your current working directoy\ndev = c(\"pdf\", \"png\") tells knitr to output both .png, and .pdf versions of the figure. The .pdf contains vector graphics, meaning the figure can be resized without pixelization.\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE,\n                      fig.width = 3,\n                      fig.height = 3,\n                      fig.path = \"myfigs/\",\n                      dev = c(\"pdf\", \"png\"))\n```\n\n\nfigure output per code block\nYou can set the options for remaining code blocks individually. These will overrule the default options that you specify in the setup chunk.\n```{r figurename, fig.width =5, fig.height =7}\n\n# some code that generates a figure\n\n```"
  },
  {
    "objectID": "compendium/reference_code.html#tables",
    "href": "compendium/reference_code.html#tables",
    "title": "Coding Reference",
    "section": "tables",
    "text": "tables\nThere are several useful (incredible even) packages for making tables in R. Here are a few:\n\nknitr package and it’s kable function (Create tables in Latex, HTML, Markdown)\nxtable package, lots of functions for tables. Here are some xtable examples xtable\nkableExtra lots of additional table functionality\ntangram a grammar of tables approach\npapaja for apa-style tables\n\n\nImportant table info\nTwo things to note, tables can be difficult, and there are different output formats.\n\nTables in R can be difficult. For example, if you are comfortable with making tables in Excel, then R will be much more difficult by comparison. In Excel, it is easy to enter information in any cell, merge any cells, add any kind of formatting you want anywhere, just by clicking around and making the changes. In R, every detail of the table is specified by script. Some of the table packages make simple tables easy (hurray!), and some of them make complicated tables possible (also good), but not necessarilly easy.\nR can output tables in many formats including HTML for the web, Latex for .pdf, and other formats (e.g., word, markdown). Sometimes (depending on the functions you are using) you will run into issues with outputting tables in different formats. Or, you will have to take steps to ensure that you are outputting the table in the format that you want.\n\n\n\nknitr::kable\nkable() is a function inside the knitr package. To use it you need to load the knitr library, or you can use knitr::kable(), which tells R to find kable inside the knitr package if you haven’t loaded knitr using library(knitr).\nkable() is great for quickly rendering data frames as nice tables without much hassle.\n\ndf &lt;- data.frame(A=1,\n                 B=2,\n                 C=3,\n                 D=4)\nknitr::kable(df)\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\nxtable\nLook at the xtable examples document for more info. https://cran.r-project.org/web/packages/xtable/vignettes/xtableGallery.pdf\n\nlibrary(xtable) # load xtable\ndata(tli) # loads a sample data frame\n\n# conduct an ANOVA\n fm1 &lt;- aov(tlimth ~ sex + ethnicty + grade + disadvg, data = tli)\n \n# print the table for HTML using xtable and kable together\nknitr::kable(xtable(fm1))\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\nsex\n1\n75.37255\n75.37255\n0.3751912\n0.5416830\n\n\nethnicty\n3\n2572.14918\n857.38306\n4.2679008\n0.0071831\n\n\ngrade\n1\n36.30740\n36.30740\n0.1807318\n0.6717271\n\n\ndisadvg\n1\n59.30338\n59.30338\n0.2952017\n0.5882062\n\n\nResiduals\n93\n18682.86749\n200.89105\nNA\nNA\n\n\n\n\n\n# Note this will print a table in latex for .pdf\n# xtable(fm1)\n\n\n\nkableExtra\nThere are many great things about kableExtra. One great thing is that kableExtra has unique table options for html and for formatting to .pdf through latex. For example, interactive tables are possible in html, but not in .pdf. Another great thing is the ability to add rows of headers on top of each other. For example, data.frames in R only have one row of headers for the columns, kableExtra can add more on top.\n\nHTML info for kableExtra\nLatex info (pdf) for kableExtra\n\n\nlibrary(kableExtra)\n#&gt; \n#&gt; Attaching package: 'kableExtra'\n#&gt; The following object is masked from 'package:dplyr':\n#&gt; \n#&gt;     group_rows\ndf &lt;- data.frame(A=1,\n                 B=2,\n                 C=3,\n                 D=4)\nkable(df) %&gt;%\n  kable_styling(\"striped\") %&gt;%\n  add_header_above(c(\"Group 1\" = 2, \"Group 2\" = 2))\n\n\n\n\n\n\n\n\n\n\n\nGroup 1\n\n\nGroup 2\n\n\n\nA\nB\nC\nD\n\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n\n\ntangram\nThis package implements a grammar of tables. Similar to the concept behind ggplot2, which implements a grammar of graphics for figures.\n\ntangram github\ntangram html examples"
  },
  {
    "objectID": "compendium/reference_code.html#papaja",
    "href": "compendium/reference_code.html#papaja",
    "title": "Coding Reference",
    "section": "papaja",
    "text": "papaja\npapaja is a package for rendering APA-style manuscripts in pdf using R Markdown. We will learn more about papaja in class. One feature of papaja is that it supports APA-style tables.\n\npapaja documentation\npapaja APA tables\n\n\nInstalling papaja\n\n\npapaja requires a latex installation in order to compile .Rmd documents to pdf. The papaja documentation provides some guidance on installing latex and then papaja, see the getting started section.\nYou can also watch this video, which goes through some of the same steps below:\n\n## install tinytex\nif(!\"tinytex\" %in% rownames(installed.packages())) install.packages(\"tinytex\")\n\n## initialize tinytex\ntinytex::install_tinytex()\n\n# Install devtools package if necessary\nif(!\"devtools\" %in% rownames(installed.packages())) install.packages(\"devtools\")\n\n# Install the stable development verions from GitHub\ndevtools::install_github(\"crsh/papaja\")"
  },
  {
    "objectID": "compendium/reference_code.html#vectorized-approaches",
    "href": "compendium/reference_code.html#vectorized-approaches",
    "title": "Coding Reference",
    "section": "Vectorized approaches",
    "text": "Vectorized approaches\nLoops are a common tool for doing something many times. R can accomplish the goal of “doing something many times” without loops, using a vectorized approach.\n\nBasic examples\nLet’s take a close look at some very basic differences between using a loop, and using R’s vectorized approach\nConsider the problem of adding a single number to all of the numbers in a vector.\n\nnums &lt;- c(1,2,3,4)\n\n# vectorized approach\n# R automatically adds 1 to all of the numbers\nnums+1\n#&gt; [1] 2 3 4 5\n\n# loop approach\n# much longer to write out\nfor(i in 1:length(nums)){\n  nums[i] &lt;- nums[i]+1\n}\nnums\n#&gt; [1] 2 3 4 5\n\nHow about adding two vectors together, so we add the first two numbers together, then the second two numbers etc.\n\nA &lt;- c(1,2,3,4)\nB &lt;- c(1,2,3,4)\n\n# vectorized approach\nA+B\n#&gt; [1] 2 4 6 8\n\n# loop approach\nthe_sum &lt;-c()\nfor(i in 1:length(A)){\n  the_sum[i] &lt;- A[i]+B[i]\n}\nthe_sum\n#&gt; [1] 2 4 6 8\n\nHow about comparing the identity of the elements in two vectors to see if they are the same or not?\n\nA &lt;- c(\"c\",\"e\",\"f\",\"g\")\nB &lt;- c(\"d\",\"e\",\"f\",\"g\")\n\n#vectorized approach\nA==B\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\n\n# loop approach\ncompared &lt;-c()\nfor(i in 1:length(A)){\n  if(A[i]==B[i]){\n    compared[i] &lt;- TRUE\n  } else {\n    compared[i] &lt;- FALSE\n  }\n}\ncompared\n#&gt; [1] FALSE  TRUE  TRUE  TRUE\n\n\n\nReplicate\nreplicate(n, expr) allows you to repeat a function many times, and return the answer in a vector\n\n# returns 1 randomly sampled number from 1 to 10\nsample(1:10,1)\n#&gt; [1] 3\n\n# let's repeat the above 10 times using replicate\nreplicate(10,sample(1:10,1))\n#&gt;  [1] 10  7  3  9  7  3  4  1  1  2\n\nThe next example shows how to write a function to do something, and then use the function inside replicate to repeat the function many times.\nFor example, we write a function to run a one-sample t-test on a random sample drawn from a normal distribution\n\nttest_result &lt;- function(){\n  sample &lt;- rnorm(10,0,1)\n  t_out &lt;- t.test(sample, mu=0)\n  return(t_out$statistic)\n}\n\n# get 10 t-values from repeating the above 10 times\nreplicate(10, ttest_result() )\n#&gt;          t          t          t          t          t          t          t \n#&gt;  0.7951104  0.4846923  0.2035359  1.8240212 -0.8928100  1.2249398 -1.0680020 \n#&gt;          t          t          t \n#&gt;  1.6202635  1.8433129 -0.0658390\n\n\n\napply family\nThe apply family of functions can be used to “apply” a function across elements of an object. A general overview can be found here\nSome of the apply functions include: apply(), lapply, and sapply.\n\n\nlapply and sapply\nHere is part of the definition of lapply from the help file:\nlapply returns a list of the same length as X, each element of which is the result of applying FUN to the corresponding element of X.\nLet’s see some examples:\nLet’s apply a function to each of the elements in a vector. To keep things simple, our function will add 1 to a number\n\nsome_numbers &lt;- c(1,2,3,4)\n\nadd_one &lt;- function(x){\n  return(x+1)\n}\n\n# returns a list, containing the answers\nlapply(some_numbers, add_one)\n#&gt; [[1]]\n#&gt; [1] 2\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 4\n#&gt; \n#&gt; [[4]]\n#&gt; [1] 5\n\n# unlists the list\nunlist(lapply(some_numbers,add_one))\n#&gt; [1] 2 3 4 5\n\n# sapply does the unlisting for you\nsapply(some_numbers, add_one)\n#&gt; [1] 2 3 4 5\n\nAn alternative syntax for lapply and sapply let’s you define the function you want to apply inside the lapply or sapply function.\nIn this case, each element in the vector some_numbers will become the x value in the function.\n\nsome_numbers &lt;- c(1,2,3,4)\n\nlapply(some_numbers, FUN = function(x){x+1})\n#&gt; [[1]]\n#&gt; [1] 2\n#&gt; \n#&gt; [[2]]\n#&gt; [1] 3\n#&gt; \n#&gt; [[3]]\n#&gt; [1] 4\n#&gt; \n#&gt; [[4]]\n#&gt; [1] 5\nsapply(some_numbers, FUN = function(x){x+1})\n#&gt; [1] 2 3 4 5\n\n\n\napply\nThe apply function can be used on 2-dimensional data, and allows you to apply a function across the rows or the columns of the data.\nLet’s say you had a 5x5 matrix of random numbers. Let’s find the sum of each row\n\nrandom_matrix &lt;- matrix(sample(1:10,25, replace=TRUE),ncol=5)\n\n# applies the sum function to each row\n# 1 tells apply to go across rows\napply(random_matrix,1,sum)\n#&gt; [1] 21 23 27 32 26\n\nThe sum of each column\n\n# applies the sum function to each column\n# 2 tells apply to go across columns\napply(random_matrix, 2, sum)\n#&gt; [1] 27 18 20 19 45\n\nLet’s say we have a matrix storing 3 samples. Each sample has 10 numbers. Each sample is stored in a column, and each row represents an observation.\n\nsample_matrix &lt;- matrix(rnorm(30,0,1),ncol=3)\n\nLet’s use apply to conduct 10 one-sample t-tests, one for each column. In this example, we can pass the mu=0 parameter into the t.test function. However, we will return the entire ouput of each t-test in a list.\n\napply(sample_matrix,2,t.test, mu=0)\n#&gt; [[1]]\n#&gt; \n#&gt;  One Sample t-test\n#&gt; \n#&gt; data:  newX[, i]\n#&gt; t = 1.4712, df = 9, p-value = 0.1753\n#&gt; alternative hypothesis: true mean is not equal to 0\n#&gt; 95 percent confidence interval:\n#&gt;  -0.2150424  1.0150636\n#&gt; sample estimates:\n#&gt; mean of x \n#&gt; 0.4000106 \n#&gt; \n#&gt; \n#&gt; [[2]]\n#&gt; \n#&gt;  One Sample t-test\n#&gt; \n#&gt; data:  newX[, i]\n#&gt; t = 1.4105, df = 9, p-value = 0.192\n#&gt; alternative hypothesis: true mean is not equal to 0\n#&gt; 95 percent confidence interval:\n#&gt;  -0.2195122  0.9465779\n#&gt; sample estimates:\n#&gt; mean of x \n#&gt; 0.3635329 \n#&gt; \n#&gt; \n#&gt; [[3]]\n#&gt; \n#&gt;  One Sample t-test\n#&gt; \n#&gt; data:  newX[, i]\n#&gt; t = 0.96622, df = 9, p-value = 0.3592\n#&gt; alternative hypothesis: true mean is not equal to 0\n#&gt; 95 percent confidence interval:\n#&gt;  -0.4964675  1.2367792\n#&gt; sample estimates:\n#&gt; mean of x \n#&gt; 0.3701558\n\nWhat if we wanted to return only the t-values, rather than whole output?\nYou might try this, but it doesn’t work\n\napply(sample_matrix,2,t.test$statistic, mu=0)\n#&gt; Error in t.test$statistic: object of type 'closure' is not subsettable\n\nSo, we write a custom function\n\napply(sample_matrix, 2, \n      FUN = function(x){\n        t_out &lt;- t.test(x,mu=0)\n        return(t_out$statistic)\n      })\n#&gt; [1] 1.4712339 1.4104717 0.9662222"
  },
  {
    "objectID": "compendium/resources.html",
    "href": "compendium/resources.html",
    "title": "R resources",
    "section": "",
    "text": "Note: My plan is to update and organize this across the semester.\nIf you want a really big list of all things R, check this one out by Paul Vanderlaken:\nhttps://paulvanderlaken.com/2017/08/10/r-resources-cheatsheets-tutorials-books/"
  },
  {
    "objectID": "compendium/resources.html#textbook-and-psyteachr",
    "href": "compendium/resources.html#textbook-and-psyteachr",
    "title": "R resources",
    "section": "Textbook and psyteachR",
    "text": "Textbook and psyteachR\nWe are using a textbook (Applied Data Skills: Processing and Presenting Data) by the psyteachR group:\nhttps://psyteachr.github.io/ads-v2/\nPsyteachR has several other excellent resources for learning R:\nhttps://psyteachr.github.io"
  },
  {
    "objectID": "compendium/resources.html#software-we-use-in-this-class",
    "href": "compendium/resources.html#software-we-use-in-this-class",
    "title": "R resources",
    "section": "Software we use in this class",
    "text": "Software we use in this class\n\nR\nThe programming language, https://www.r-project.org.\n\n\nR Studio\nThe IDE (integrated development environment) used to write code, https://posit.co/products/open-source/rstudio/.\n\n\nGithub Desktop\nA program we use for git version control, and to push and pull our projects from our local computer to Github.com.\nhttps://desktop.github.com\n\n\nQuarto\nQuarto is a “scientific and technical publishing system” that we will use for reproducible data analysis. Quarto uses a combination of markdown and code to produce many forms of documents, from slide decks, to pdfs, and books, and websites.\nhttps://quarto.org"
  },
  {
    "objectID": "compendium/resources.html#getting-help",
    "href": "compendium/resources.html#getting-help",
    "title": "R resources",
    "section": "Getting Help",
    "text": "Getting Help\n\nAsk me and each other\nEvery coder runs into roadblocks. I’ve spent hours upon hours chasing down bugs. I encourage you to try pushing through and track down issues in your own code; however, please use the class as a resource for help when you get stuck (ask me, ask another student in class).\n\n\nGoogling\nGoogling R questions can often turn up an example of someone solving your issue or a closely related one. For example, you can copy error messages and google them, or ask “how to do X in R”.\n\n\nStackoverflow\nStackoverflow is great, Google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways. At the same time, you may find lots of “answers” that don’t help you with your specific problem.\n\n\nRstudio/Posit Community\nRStudio recently changed its name to posit. They have a forum with many helpful answers to user questions.\nhttps://community.rstudio.com"
  },
  {
    "objectID": "compendium/resources.html#statistics-concepts",
    "href": "compendium/resources.html#statistics-concepts",
    "title": "R resources",
    "section": "Statistics concepts",
    "text": "Statistics concepts\nOur class will make use of some statistics concepts for data analysis and visualization, but this is not a statistics class. There are several free resources combining learning R and statistics.\nI have wrote a few resources at the undergraduate and graduate levels, each with different examples you may find helpful.\n\nAnswering questions with data\nAn undergraduate statistics textbook for psychology students.\nTextbook: https://crumplab.com/statistics/ Lab manual with R exercises: https://crumplab.com/statisticsLab/\n\n\nReproducible statistics for psychologists with R\nA two semester graduate compilation of R-based labs, each one has a video tutorial, example problems, and worked through video solutions.\nhttps://crumplab.com/rstatsforpsych/\n\n\nOther online stats textbooks\nThere are increasing numbers of excellent, free, and online resources for learning statistics and R, here are some:\n\nDanielle Navarro’s Learning Statistics with R and website for learning R R for Psychological Science\nRussell Poldracks’s Statistical Thinking for the 21st Century\nMartin Speekenbrink’s Statistics: data analysis and modelling, and companion R book An R companion to Statistics: data analysis and modelling\nInto python instead? Check out Todd Gureckis’ Lab in Cognition and Perception\nLooking for stats videos, check out Erin Buchanan’s STATISTICS OF DOOM! on youtube: https://www.youtube.com/channel/UCMdihazndR0f9XBoSXWqnYg"
  },
  {
    "objectID": "compendium/resources.html#a-longer-list",
    "href": "compendium/resources.html#a-longer-list",
    "title": "R resources",
    "section": "A longeR list",
    "text": "A longeR list\n\nHadley Wickham has written several fantastic and free books that I keep coming back to all the time, R for Data Science, ggplot 2: elegant graphics for data analyis, Advanced R, and R packages.\nR markdown and knitr are core libraries for using R to create all sorts of reproducible documents from pdfs to websites. Here are some excellent resources:\n\nhttps://bookdown.org/yihui/rmarkdown/\nhttps://bookdown.org/yihui/rmarkdown-cookbook/\n\nGithub got you down? Jenny Bryan has a pick me up for you https://happygitwithr.com\nhttps://cran.r-project.org/doc/contrib/Short-refcard.pdf This link takes you to a reference card, that shows a big long list of intrinsic r functions.\nThere’s a bunch of R markdown tricks right here https://holtzy.github.io/Pimp-my-rmd/."
  },
  {
    "objectID": "compendium/version_control.html",
    "href": "compendium/version_control.html",
    "title": "Git, github, and version control",
    "section": "",
    "text": "In a nutshell, we will use git software in our folders so that we can time travel back to any previously saved state (version control gives us access to the history of all our changes). We will also publish copies of our folders on the cloud service Github.com, which has git enabled cloud folders. This will allow us to share code, websites, and many other aspects of our data analysis."
  },
  {
    "objectID": "compendium/version_control.html#a-cartoon-overview",
    "href": "compendium/version_control.html#a-cartoon-overview",
    "title": "Git, github, and version control",
    "section": "",
    "text": "In a nutshell, we will use git software in our folders so that we can time travel back to any previously saved state (version control gives us access to the history of all our changes). We will also publish copies of our folders on the cloud service Github.com, which has git enabled cloud folders. This will allow us to share code, websites, and many other aspects of our data analysis."
  },
  {
    "objectID": "compendium/version_control.html#best-general-and-comprehensive-overview",
    "href": "compendium/version_control.html#best-general-and-comprehensive-overview",
    "title": "Git, github, and version control",
    "section": "Best general and comprehensive overview",
    "text": "Best general and comprehensive overview\nThe best resource I have found to explain git, github, and using version control with R is Jenny Bryan’s book “Let’s Git started”.\nhttps://happygitwithr.com"
  },
  {
    "objectID": "compendium/version_control.html#what-is-version-control",
    "href": "compendium/version_control.html#what-is-version-control",
    "title": "Git, github, and version control",
    "section": "What is version control?",
    "text": "What is version control?\nWhen you make changes to a file or folder on your computer they may be lost if they are not saved. If you make changes AND save your changes, then the previous state of the file is erased and replaced with the new version of the file.\nVersion control systems allow a user to go back to previous versions of a file. Imagine you were writing a paper in a microsoft word and you saved it several times as you went along. If you were using version control you would be able to go back and see the version of the document at each saved state.\nSome cloud services automatically have version control. For example, dropbox.com uses version control, and if you have saved and changed files in a dropbox folder, then it is possible to go back to previous versions of the file.\nVersion control is used by software developers and coders for many reasons, including to organize and keep track of project development, but also to be able to go back to previous versions of a project or code base."
  },
  {
    "objectID": "compendium/version_control.html#git-github-desktop-and-github.com",
    "href": "compendium/version_control.html#git-github-desktop-and-github.com",
    "title": "Git, github, and version control",
    "section": "Git, Github Desktop and Github.com",
    "text": "Git, Github Desktop and Github.com\nWe will use the git version control system in our class. This system is deep, sophisticated, and even daunting to a beginner. At the same time, there are som comparatively simple ways to use the system and get benefits from it without being pro git users right away.\nGit is a software library you install on your local computer. This software will allow you to create “git-enabled” folders with version control. When you make changes in these folder AND save your changes using a commit message, you will be able to go back to any previous saved state.\nThere are multiple ways to enable any folder as a git folder. We will usually do this using R studio. Whenever we create a new R studio project folder, if you have git properly installed, you will be able to choose an option to initialize as a git folder. It is possible to turn a folder into a git folder later on too using other methods.\nGithub desktop is a free program we will use to easily work with a git folder. We use this program to locate git folders on our computer (build a list of them for easy access.) When we make changes to files in a git folder, then Github desktop is used to commit the changes. This involves writing a short title or message describing the changes, and then “committing” them. This is all point and click. You can also view the history of all previously committed changes in Github desktop.\nEverything so far is all local to your own computer. We will also be using Github.com as a cloud service to publicly (or privately) share code on the internet. Github desktop is a program that let’s us do a few things with Github.com:\n\nPublish a local git folder to a Github.com repository\n\n\n\nYou will be able to go to your Github.com account and view the published folder there\n\n\n\nMake changes to your files on your local computer, commit your changes with a message, then push them to github.com so that the cloud repository will be updated.\nIf you change something in your repository on github.com, then you can “pull” your changes back.\nIt’s also possible to manage collaborations with other people."
  },
  {
    "objectID": "compendium/version_control.html#github-workflows-for-this-class",
    "href": "compendium/version_control.html#github-workflows-for-this-class",
    "title": "Git, github, and version control",
    "section": "Github workflows for this class",
    "text": "Github workflows for this class\nThere are multiple workflows for making changes to your local R project (or posit cloud project) and sending them to your github.com repository. This is an instructional guide that you can consult if you forget or run into trouble.\nAt the beginning of the course these steps may be confusing. Over time they will become familiar and easy. By the end of the course you should be justifiably confident that you can do basic github operations like make a repository and push/pull changes from it.\nIf you are spending more than 20 minutes trying to solve a github.com problem it is time to email me, or ask someone in class for help.\nOver time I hope to add video demonstrations to improve the instructions.\n\nDesktop workflow with Github Desktop\nYou are using Rstudio on your computer and you have github desktop installed.\nIf everything is working properly, then when you make a new R studio project you should see the option to enable the project as a git repository. You should also see the git tab in Rstudio when you have your git-enabled project open. If you do not see these options, you may have a problem with git being installed, or with Rstudio detecting git where it is installed. Talk to me if you have this problem.\n\nMake changes in Rstudio to the files in your project\nIf you are making changes to your blog or website, make sure you “render” the new page, or the whole website (press render website from the build tab in Rstudio). This ensures all of the html files are correctly compiled to the docs folder.\n\nWhen you are ready to push your changes to github.com follow these steps.\n\nOpen github desktop\nMake sure you have added your project folder to github desktop (done one time at the beginning). If you delete and redownload github desktop you have to add again.\nMake sure you are signed into your github.com account in github desktop\nCommit your changes. When you click on a repository in github desktop, you will see a column of changes to all of the files. There is a textbox for a commit message. Add a short title to describe the changes, and press commit.\nPush your changes. After you have committed your changes you will have the “Push Origin” option. Clicking this will update the repository on github.com with the new changes.\n\nAfter you “push” the changes, you can “view on github” which will take you directly to your repo on github.com. You will also see a “fetch origin” message. If any changes were made to the repository on github.com (that are not on your local computer), then you can “pull” them or “fetch” them from github.com back to your computer. We won’t be using this option much in our class.\n\n\nPosit cloud workflow\nYou are using posit cloud and you want to push your repository to github.com. See the tutorial on using posit cloud.\n\n\nAdvanced workflow\nOther workflows are possible, but beyond the scope of this tutorial. The best comprehensive information I have seen is in Jenny Bryan’s free book here: https://happygitwithr.com/index.html"
  },
  {
    "objectID": "index.html#psyc-3470-data-analytics-and-data-visualization-in-the-social-and-behavioral-sciences",
    "href": "index.html#psyc-3470-data-analytics-and-data-visualization-in-the-social-and-behavioral-sciences",
    "title": "PSYC3470",
    "section": "PSYC 3470: Data Analytics and Data Visualization in the Social and Behavioral Sciences",
    "text": "PSYC 3470: Data Analytics and Data Visualization in the Social and Behavioral Sciences\nThis is the course website for PSYC 3470: Data Analytics and Data Visualization in the Social and Behavioral Sciences, taught by Dr. Matthew Crump in Spring 2023. This website is currently under development.\nBulletin Description:\n3 hours; 3 credits\nHow the “data revolution” has transformed the way we understand and interact with the world around us. Fundamental concepts and practical techniques and skills needed for data analytics and data visualization. Availability of large datasets and their use across a variety of settings, including social networks, libraries, governments, non-profits, etc. The emergence of practices with regard to data analysis and visual communication in the social and behavioral sciences. This course is the same as Sociology 3507.\nSources\nThis course will use open-educational resources, typically licensed on creative commons."
  },
  {
    "objectID": "modules/1 Introduction/index.html",
    "href": "modules/1 Introduction/index.html",
    "title": "1 Introduction",
    "section": "",
    "text": "Welcome to the orientation learning module for PSYC 2530. We will cover everything here and more on the first day of class. See you there."
  },
  {
    "objectID": "modules/1 Introduction/index.html#goals",
    "href": "modules/1 Introduction/index.html#goals",
    "title": "1 Introduction",
    "section": "Goals",
    "text": "Goals\n\nGeneral course orientation\nget you ready for the first week"
  },
  {
    "objectID": "modules/1 Introduction/index.html#read",
    "href": "modules/1 Introduction/index.html#read",
    "title": "1 Introduction",
    "section": "Read",
    "text": "Read\nRead the syllabus for this course."
  },
  {
    "objectID": "modules/1 Introduction/index.html#getting-started-goals",
    "href": "modules/1 Introduction/index.html#getting-started-goals",
    "title": "1 Introduction",
    "section": "Getting started goals",
    "text": "Getting started goals\nThere are many possibilities for technical difficulties as we get started. The computer room is equipped with the software that we need, however, I strongly encourage you to install the necessary software on your own computer.\nThroughout the semester we will be using software called R, Rstudio, quarto, and github. All of this software is free and open-source, and can be installed on windows, mac, or linux.\nOver the semester, you will be using these tools to build a personal course blog and website. Every week will involve blogging assignments, and there are slightly more involved midterm and final projects.\nPlease follow these instructions to create a quarto blog. Don’t worry if you can’t get it to work, we will troubleshoot in class."
  },
  {
    "objectID": "modules/1 Introduction/index.html#quarto-blog-instructions",
    "href": "modules/1 Introduction/index.html#quarto-blog-instructions",
    "title": "1 Introduction",
    "section": "Quarto blog instructions",
    "text": "Quarto blog instructions\nThis is a blog post I made (on my own quarto blog), about how to get started blogging with quarto.\nhttps://crumplab.com/blog/post_887_8_25_22_quartoblog/"
  },
  {
    "objectID": "modules/1 Introduction/index.html#week-1-assignment",
    "href": "modules/1 Introduction/index.html#week-1-assignment",
    "title": "1 Introduction",
    "section": "Week 1 assignment",
    "text": "Week 1 assignment\n\nOnce you have created your quarto blog, please submit the url to your blog on blackboard (to the week 0 assignment.)"
  },
  {
    "objectID": "modules/1 Introduction/index.html#more-goals-for-week-1",
    "href": "modules/1 Introduction/index.html#more-goals-for-week-1",
    "title": "1 Introduction",
    "section": "More Goals for Week 1",
    "text": "More Goals for Week 1\nWe have two more introductory week classes. In these two classes we have a few goals to keep us busy.\n\nGet an overall sense of what we can do with the data-analysis and data visualization software we are using in the class.\nSolve technical problems associated with the first assignment (getting R, R Studio, Github Desktop, and your Quarto blog working.)\nGet some basic understanding of the workflow we will be using, make sure it works, and start getting into the learning process.\n\nThroughout the first week I will be updating this page as well as the compendium with material as we go."
  },
  {
    "objectID": "modules/1 Introduction/index.html#data-science-in-a-box",
    "href": "modules/1 Introduction/index.html#data-science-in-a-box",
    "title": "1 Introduction",
    "section": "Data science in a box",
    "text": "Data science in a box\nThere are many great free resources on the web for learning data skills with R. This example comes from data science in a box.\nhttps://datasciencebox.org\nThis whole course is built using quarto, the same tool we will use for our blogs.\nThere are different approaches to learning R from scratch. One approach is start with all of the fundamental building blocks of coding, and then slowly move into much higher level tasks for data analysis, like learning how to use functions for data-visualization. Another approach is to begin with a hands-on example of using R for reproducible data-analysis and visualization.\nNOTE: “Reproducible” is an important concept we will emphasize throughout the course. For now a “reproducible” analysis means that other people can re-do the same analysis that you did and get the same results.\nIn class we will look at the “First dataviz” example from the hello world section:\nhttps://datasciencebox.org/02-hello-world.html\n\nInstructions\nGOAL: Our big goal here is to reproduce the data-visualization from this example on our own computer using R Studio, and then talk about what we are looking at.\n\nOpen Rstudio\nMake a new project\n\n\n\nUnder the file menu, select “New project”, or click the top-right corner of R studio (with the blue R cube), and choose New Project.\nIMPORTANT: You should almost always be working inside an R studio project. We will talk more about this in class.\nChoose “New Directory”\nChoose “New Project”\nCreate a name, and choose where to save it, e.g. “datavis1”\nClick “Create project”\n\n\n\nYou can confirm you are now in an R studio project by looking at the top right hand corner, you should see a blue cube with the name of your project.\n\n\nThis is what an empty R studio project looks like. The bottom right corner shows you the folder for your current project. There is only one file “datavis1.Rproj”. If you click on this file from your filesystem (e.g., in finder on a mac, or in explorer or my computer on windows), then it will load Rstudio and this project.\n\nCreate a new quarto document. Click the green circle with a plus, choose new “Quarto document”.\n\n\nGive your document a title.\n\nClick the “Render” Button. Then save your document in your R project folder.\nIMPORTANT. The title of your document can be different from the name of the file. You should change the file name from “Untitled.qmd” to something more descriptive like “datavis_example.qmd”, and then press save.\nAfter saving and rendering the document you will see the html (web-page) output. The file doesn’t have any text or analysis code, so it will appear mostly blank.\n\nThe datascience in a box course has an example data analysis and visualization that we should be able to reproduce on our computers.\nThis example shows a short data-analysis report that conducts a visualization of United Nations voting data for different countries.\nThe source code for this report is available here:\nhttps://github.com/rstudio-education/datascience-box/blob/main/course-materials/application-exercises/ae-01a-un-votes/unvotes.qmd\n\nCopy the plain text from line 1 to line 92, and then paste it into your own .qmd document. Make sure you replace all of your original text. Save your .qmd document.\nRstudio may ask you to install some missing packages, click the install option.\nOnce the packages are installed, then you should be able to render the document. And, you should see something like this.\n\n\nWe are going to cover the rest in class. If you missed class you can try the videos about this content on datascience in a\nhttps://datasciencebox.org/02-hello-world.html\nThe first two videos are probably most helpful and similar to what we will discuss in class.\nFinally, I created a folder called examples in the gihthub repository for this course. This example is located in the “datavis1” folder. You can also download this folder and access its contents as another method to try the example:\nhttps://github.com/CrumpLab/psyc3470/tree/master/examples"
  },
  {
    "objectID": "modules/10 Data Tidying/index.html",
    "href": "modules/10 Data Tidying/index.html",
    "title": "10 Data Tidying",
    "section": "",
    "text": "Read the data-tidying chapter.\nhttps://psyteachr.github.io/ads-v2/08-tidy.html"
  },
  {
    "objectID": "modules/10 Data Tidying/index.html#read",
    "href": "modules/10 Data Tidying/index.html#read",
    "title": "10 Data Tidying",
    "section": "",
    "text": "Read the data-tidying chapter.\nhttps://psyteachr.github.io/ads-v2/08-tidy.html"
  },
  {
    "objectID": "modules/10 Data Tidying/index.html#additional-resources",
    "href": "modules/10 Data Tidying/index.html#additional-resources",
    "title": "10 Data Tidying",
    "section": "Additional resources",
    "text": "Additional resources\nThe tidyR cheatsheet:\nhttps://raw.githubusercontent.com/rstudio/cheatsheets/main/tidyr.pdf"
  },
  {
    "objectID": "modules/10 Data Tidying/index.html#week-10-assignment",
    "href": "modules/10 Data Tidying/index.html#week-10-assignment",
    "title": "10 Data Tidying",
    "section": "Week 10 assignment",
    "text": "Week 10 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard. Blog post ideas will be discussed in class, and this assignment will be updated for clarity.\n\nThere are several options for completing this post. The most open-ended option is to read the textbook chapter and use your blog post to demonstrate that you can accomplish the major topics covered in the chapter.\nAlternatively (or additionally), you can focus on accomplishing these two major goals:\nA. Explain the concept of tidy data.\nB. Demonstrate that you can use the pivot_longer and pivot_wider functions. Explain their use cases.\nC. Section 8.5 of the textbook shows an example of using pipes to accomplish several data tidying steps.\n\nShow that you can compile and run this code on your blog.\nAdd comments to the code to show that you can explain the meaning of each step."
  },
  {
    "objectID": "modules/11 Data Wrangling/index.html",
    "href": "modules/11 Data Wrangling/index.html",
    "title": "11 Data Wrangling",
    "section": "",
    "text": "Read the data-wrangling chapter.\nhttps://psyteachr.github.io/ads-v2/09-wrangle.html"
  },
  {
    "objectID": "modules/11 Data Wrangling/index.html#read",
    "href": "modules/11 Data Wrangling/index.html#read",
    "title": "11 Data Wrangling",
    "section": "",
    "text": "Read the data-wrangling chapter.\nhttps://psyteachr.github.io/ads-v2/09-wrangle.html"
  },
  {
    "objectID": "modules/11 Data Wrangling/index.html#additional-resources",
    "href": "modules/11 Data Wrangling/index.html#additional-resources",
    "title": "11 Data Wrangling",
    "section": "Additional resources",
    "text": "Additional resources\nhttps://r4ds.had.co.nz/wrangle-intro.html"
  },
  {
    "objectID": "modules/11 Data Wrangling/index.html#week-11-assignment",
    "href": "modules/11 Data Wrangling/index.html#week-11-assignment",
    "title": "11 Data Wrangling",
    "section": "Week 11 assignment",
    "text": "Week 11 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard.\n\nThis chapter discusses essential functions from the dplyr package. These include: select, filter, arrange, mutate, summarise, and group_by. In you blog post demonstrate that you understand and can use each of these functions."
  },
  {
    "objectID": "modules/12 Customizations/index.html",
    "href": "modules/12 Customizations/index.html",
    "title": "12 Customizations",
    "section": "",
    "text": "Read the chapter on customizations.\nhttps://psyteachr.github.io/ads-v2/10-custom.html\nThis chapter introduces several different add ons for visualizations, and options that you have with R markdown documents."
  },
  {
    "objectID": "modules/12 Customizations/index.html#read",
    "href": "modules/12 Customizations/index.html#read",
    "title": "12 Customizations",
    "section": "",
    "text": "Read the chapter on customizations.\nhttps://psyteachr.github.io/ads-v2/10-custom.html\nThis chapter introduces several different add ons for visualizations, and options that you have with R markdown documents."
  },
  {
    "objectID": "modules/12 Customizations/index.html#week-12-assignment",
    "href": "modules/12 Customizations/index.html#week-12-assignment",
    "title": "12 Customizations",
    "section": "Week 12 assignment",
    "text": "Week 12 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard. Blog post ideas will be discussed in class, and this assignment will be updated for clarity.\n\nAs we near the end of the semester I am not giving specific requirements for the blog post. Use the post to demonstrate that you can accomplish concepts discussed in the chapter. For example, at a minimum demonstrate that you can create some of the graphs from the chapter (e.g., like a word cloud.)"
  },
  {
    "objectID": "modules/13 Practice Tidy Tuesday/index.html",
    "href": "modules/13 Practice Tidy Tuesday/index.html",
    "title": "13 Practice Tidy Tuesday",
    "section": "",
    "text": "There are no textbook readings. We will be using class time to complete tidy tuesday challenges, which involve obtaining open data and visualizing patterns from the open data set."
  },
  {
    "objectID": "modules/13 Practice Tidy Tuesday/index.html#read",
    "href": "modules/13 Practice Tidy Tuesday/index.html#read",
    "title": "13 Practice Tidy Tuesday",
    "section": "",
    "text": "There are no textbook readings. We will be using class time to complete tidy tuesday challenges, which involve obtaining open data and visualizing patterns from the open data set."
  },
  {
    "objectID": "modules/13 Practice Tidy Tuesday/index.html#additional-resources",
    "href": "modules/13 Practice Tidy Tuesday/index.html#additional-resources",
    "title": "13 Practice Tidy Tuesday",
    "section": "Additional resources",
    "text": "Additional resources\nSee the general assignment information about tidy tuesday.\nhttps://crumplab.com/psyc3470/modules/General%20Assignments/"
  },
  {
    "objectID": "modules/13 Practice Tidy Tuesday/index.html#week-13-assignment",
    "href": "modules/13 Practice Tidy Tuesday/index.html#week-13-assignment",
    "title": "13 Practice Tidy Tuesday",
    "section": "Week 13 assignment",
    "text": "Week 13 assignment\n\nYou have a few options for your blog post this week:\n\nA. Blog about the tidy tuesday examples that we discuss in class B. Use the time to complete a missing blog post C. Blog about completing an aspect of your final project D. Blog about a different tidy tuesday challenge that we did not discuss in class (if you do this, you will get credit both for this week’s blog and for completing a tidy tuesday challenge)"
  },
  {
    "objectID": "modules/14 More Tidy Tuesday/index.html",
    "href": "modules/14 More Tidy Tuesday/index.html",
    "title": "14 More Tidy Tuesday",
    "section": "",
    "text": "There are no textbook readings.\nWe will be using class time to discuss issues with your final projects, and to continue practicing data-visualization by completing tidy tuesday challenges, which involve obtaining open data and visualizing patterns from the open data set."
  },
  {
    "objectID": "modules/14 More Tidy Tuesday/index.html#read",
    "href": "modules/14 More Tidy Tuesday/index.html#read",
    "title": "14 More Tidy Tuesday",
    "section": "",
    "text": "There are no textbook readings.\nWe will be using class time to discuss issues with your final projects, and to continue practicing data-visualization by completing tidy tuesday challenges, which involve obtaining open data and visualizing patterns from the open data set."
  },
  {
    "objectID": "modules/14 More Tidy Tuesday/index.html#additional-resources",
    "href": "modules/14 More Tidy Tuesday/index.html#additional-resources",
    "title": "14 More Tidy Tuesday",
    "section": "Additional resources",
    "text": "Additional resources\nSee the general assignment information about tidy tuesday.\nhttps://crumplab.com/psyc3470/modules/General%20Assignments/"
  },
  {
    "objectID": "modules/14 More Tidy Tuesday/index.html#week-14-assignment",
    "href": "modules/14 More Tidy Tuesday/index.html#week-14-assignment",
    "title": "14 More Tidy Tuesday",
    "section": "Week 14 assignment",
    "text": "Week 14 assignment\n\nHere are a few blogging options. If you want to go in another direction to hone your data-visualization skills, that is OK too.\n\nA. Blog about the tidy tuesday examples that we discuss in class B. Use the time to complete a missing blog post C. Blog about completing an aspect of your final project D. Blog about a different tidy tuesday challenge that we did not discuss in class (if you do this, you will get credit both for this week’s blog and for completing a tidy tuesday challenge)"
  },
  {
    "objectID": "modules/2 R and R Studio/index.html",
    "href": "modules/2 R and R Studio/index.html",
    "title": "2 R, R studio, Quarto and Github",
    "section": "",
    "text": "Read the intro to R and RStudio chapter from the textbook.\nhttps://psyteachr.github.io/ads-v2/01-intro.html"
  },
  {
    "objectID": "modules/2 R and R Studio/index.html#read",
    "href": "modules/2 R and R Studio/index.html#read",
    "title": "2 R, R studio, Quarto and Github",
    "section": "",
    "text": "Read the intro to R and RStudio chapter from the textbook.\nhttps://psyteachr.github.io/ads-v2/01-intro.html"
  },
  {
    "objectID": "modules/2 R and R Studio/index.html#additional-resources",
    "href": "modules/2 R and R Studio/index.html#additional-resources",
    "title": "2 R, R studio, Quarto and Github",
    "section": "Additional resources",
    "text": "Additional resources\n\nQuarto\nThe quarto website contains many helpful examples. We will cover aspects throughout the semester.\nhttps://quarto.org\n\n\nGithub\nWe will be making use of Github to store and share your course blog and website.\nWe will troubleshoot all Github issues individually and in class. If you want to learn more, then I recommend this free resource.\nhttps://happygitwithr.com"
  },
  {
    "objectID": "modules/2 R and R Studio/index.html#week-2-assignment-make-a-tip-sheet",
    "href": "modules/2 R and R Studio/index.html#week-2-assignment-make-a-tip-sheet",
    "title": "2 R, R studio, Quarto and Github",
    "section": "Week 2 Assignment: Make a tip sheet",
    "text": "Week 2 Assignment: Make a tip sheet\nWe are beginning week 2 on Monday February, 6th, 2023. By this point you should have your quarto blog published on github.com, and have the url to your blog submitted to the first assignment on Blackboard. If you need help completing this step, please email me.\nThis week we will cover the first chapter of the textbook, which goes into several important details about using Rstudio. In section 1.2, the authors recommend that “now would be a good time to create a notebook where you can keep a record of useful hints and tips and things to try when your code isn’t working.”\nMaking a tip sheet for yourself is the assignment for this weeks blog post.\n\nInstructions\n\nMake a new blog post where you can write “tips” and notes as you are learning about Rstudio this week. Please feel free to make notes during class and stuff this blog post with as many things that will be helpful for you to remember.\nSubmit the URL to your tips post to the week 2 assignment on blackboard."
  },
  {
    "objectID": "modules/3 Reports with R Markdown/index.html",
    "href": "modules/3 Reports with R Markdown/index.html",
    "title": "3 Reports with R Markdown",
    "section": "",
    "text": "https://psyteachr.github.io/ads-v2/02-reports.html"
  },
  {
    "objectID": "modules/3 Reports with R Markdown/index.html#read",
    "href": "modules/3 Reports with R Markdown/index.html#read",
    "title": "3 Reports with R Markdown",
    "section": "",
    "text": "https://psyteachr.github.io/ads-v2/02-reports.html"
  },
  {
    "objectID": "modules/3 Reports with R Markdown/index.html#overview",
    "href": "modules/3 Reports with R Markdown/index.html#overview",
    "title": "3 Reports with R Markdown",
    "section": "Overview",
    "text": "Overview\nThe textbook chapter covers writing R markdown documents (.Rmd extension). R Markdown is a notebook style coding document that can contain plain text (markdown), and executable R code chunks along with outputs, and compile everything into one output document. This system uses a package called knitr to “knit” together the plain text and code into a final output.\nOur class is using a newer notebook system called quarto (.qmd extension). Most of the same concepts and syntax used in .Rmd work in .qmd.\nWe are just starting to learn bits of R coding. In class we have executed bits of R code in the console. Moving forward we will be writing whole scripts of code and saving our scripts in text files. It is possible to store R code in .R files, however, these script files do not allow for regular text. Instead, we will be using notebook style .qmd documents that contain both code and text.\n\nMOST IMPORTANT: Reproducible document\nThe most important concept here is that we will be learning to code using a reproducible document creation system. This provides an integrated document format to write and execute code, and to write text for purposes of communication.\n\n\nBasic Skills for this section\n\nBe able to make a new .qmd document\nBe able to render a .qmd document\nExplain the difference between the source editor view and visual editor view in Rstudio.\nBe able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\nBe aware of resources to help you learn more about markdown options.\nBe able to insert an R code chunk, and show the output in the rendered document.\n\n\nmacro for quick insert\n\n\nRunning R code chunks in a qmd\n\n\npressing play\ncopy/paste into console\nhighlight then command-enter (mac)\nprecedence issues (first to last)\n\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\nWrite inline r code.\nExplain how the rendering environment is different from the Rstudio environment.\nBe aware of more advanced quarto options for html documents, and try some of the options."
  },
  {
    "objectID": "modules/3 Reports with R Markdown/index.html#additional-resources",
    "href": "modules/3 Reports with R Markdown/index.html#additional-resources",
    "title": "3 Reports with R Markdown",
    "section": "Additional resources",
    "text": "Additional resources\n\nQuarto documents\nThe quarto website contains many helpful examples. We will cover aspects throughout the semester.\nGeneral tips for writing in quarto markdown:\nhttps://quarto.org/docs/authoring/markdown-basics.html\nMaking an html document:\nhttps://quarto.org/docs/output-formats/html-basics.html\nMaking a pdf document:\nhttps://quarto.org/docs/output-formats/pdf-basics.html\nR code chunk options:\nhttps://quarto.org/docs/computations/execution-options.html"
  },
  {
    "objectID": "modules/3 Reports with R Markdown/index.html#week-3-assignment",
    "href": "modules/3 Reports with R Markdown/index.html#week-3-assignment",
    "title": "3 Reports with R Markdown",
    "section": "Week 3 assignment",
    "text": "Week 3 assignment\n\n\n\nWrite your blog post, and submit the link to this assignment on blackboard. The video tutorial gives an extended walkthrough.\n\nAt this point we are just beginning to start coding, and at the end of this session we will have learned more about using .qmd documents. We have already been using .qmd documents for our blog posts. And, we will be using throughout the semester for almost everything we do, including coding.\nThe blog post for this week is to write a post where you check off as many basic skills as you can for this section. The basic skills are the same as above, I put them in a code chunk to make them easier to copy.\n“Checking off” the skills means making notes, or making additions/changes to your .qmd document to show yourself you can accomplish these tasks and/or understand the concepts.\n1.  Be able to make a new .qmd document\n\n2.  Be able to render a .qmd document\n\n3.  Explain the difference between the source editor view and visual editor view in Rstudio.\n\n4.  Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\n5.  Be aware of resources to help you learn more about markdown options.\n\n6.  Be able to insert an R code chunk, and show the output in the rendered document.\n  -   macro for quick insert\n  \n7.  Running R code chunks in a qmd\n  -   pressing play\n  -   copy/paste into console\n  -   highlight then command-enter (mac)\n  -   precedence issues (first to last)\n\n8.  Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n9.  Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\n10. Write inline r code.\n\n11. Explain how the rendering environment is different from the Rstudio environment.\n\n12. Be aware of more advanced quarto options for html documents, and try some of the options."
  },
  {
    "objectID": "modules/4 Data Vis/index.html",
    "href": "modules/4 Data Vis/index.html",
    "title": "4 Data Vis",
    "section": "",
    "text": "Read the data-visualization chapter\nhttps://psyteachr.github.io/ads-v2/03-viz.html"
  },
  {
    "objectID": "modules/4 Data Vis/index.html#read",
    "href": "modules/4 Data Vis/index.html#read",
    "title": "4 Data Vis",
    "section": "",
    "text": "Read the data-visualization chapter\nhttps://psyteachr.github.io/ads-v2/03-viz.html"
  },
  {
    "objectID": "modules/4 Data Vis/index.html#big-themes",
    "href": "modules/4 Data Vis/index.html#big-themes",
    "title": "4 Data Vis",
    "section": "Big themes",
    "text": "Big themes\nThis week we get our first start with actual data-visualization. Everything we do this week will be rehearsed and expanded upon for the rest of the semester.\nThere are three big topics this week:\n\nData Types\nTidy Data\nggplot2\n\nData types refer to different kinds of data like numbers versus character strings, and different object types in R used to represent data.\nTidy data refers to a data organized in a table. It is also called “long-data”. Each row is an observation, and each column is a dependent or independent variable. The magic of tidy data is that once you get your data into this format you can apply many libraries from the tidyverse to your data-analysis.\nGgplot 2 is a library for making graphs. We will use it throughout the semester, and begin learning how it works this week."
  },
  {
    "objectID": "modules/4 Data Vis/index.html#additional-resources",
    "href": "modules/4 Data Vis/index.html#additional-resources",
    "title": "4 Data Vis",
    "section": "Additional resources",
    "text": "Additional resources\n\nAdding figures to quarto documents\nhttps://quarto.org/docs/authoring/figures.html\n\n\nggplot 2\nPackage website:\nhttps://ggplot2.tidyverse.org\nBooks:\nhttps://ggplot2-book.org\nhttps://r4ds.had.co.nz/data-visualisation.html"
  },
  {
    "objectID": "modules/4 Data Vis/index.html#week-4-assignment",
    "href": "modules/4 Data Vis/index.html#week-4-assignment",
    "title": "4 Data Vis",
    "section": "Week 4 assignment",
    "text": "Week 4 assignment\nWrite a new blog post and submit the link to this assignment on blackboard. Write your blog around the three big themes:\n\nData types: Show that you understand what is available to you in R. Note also, this goal overlaps with part of the midterm project. See the appendix on Data Types in the textbook for help. Write notes and R code chunks to demonstrate your knowledge\nTidy Data: Show that you understand what this means. Give an example of data this is in tidy format, and data that is not.\nggplot2: We will continue learning about this across the semester. Show at a minimum that you can make a graph and add it to your blog. Try examples from the textbook. Show that you understand the layer concept. Identify aspects that are confusing to you so we can discuss them in class."
  },
  {
    "objectID": "modules/5 Data Import/index.html",
    "href": "modules/5 Data Import/index.html",
    "title": "5 Data Import",
    "section": "",
    "text": "Read the data import chapter.\nhttps://psyteachr.github.io/ads-v2/04-data.html"
  },
  {
    "objectID": "modules/5 Data Import/index.html#read",
    "href": "modules/5 Data Import/index.html#read",
    "title": "5 Data Import",
    "section": "",
    "text": "Read the data import chapter.\nhttps://psyteachr.github.io/ads-v2/04-data.html"
  },
  {
    "objectID": "modules/5 Data Import/index.html#additional-resources",
    "href": "modules/5 Data Import/index.html#additional-resources",
    "title": "5 Data Import",
    "section": "Additional resources",
    "text": "Additional resources\nhttps://r4ds.had.co.nz/data-import.html"
  },
  {
    "objectID": "modules/5 Data Import/index.html#week-5-assignment",
    "href": "modules/5 Data Import/index.html#week-5-assignment",
    "title": "5 Data Import",
    "section": "Week 5 assignment",
    "text": "Week 5 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard. Blog post ideas will be discussed in class, and this assignment will be updated for clarity."
  },
  {
    "objectID": "modules/6 Data Summaries/index.html",
    "href": "modules/6 Data Summaries/index.html",
    "title": "6 Data Summaries",
    "section": "",
    "text": "Read the data summaries chapter.\nhttps://psyteachr.github.io/ads-v2/05-summary.html"
  },
  {
    "objectID": "modules/6 Data Summaries/index.html#read",
    "href": "modules/6 Data Summaries/index.html#read",
    "title": "6 Data Summaries",
    "section": "",
    "text": "Read the data summaries chapter.\nhttps://psyteachr.github.io/ads-v2/05-summary.html"
  },
  {
    "objectID": "modules/6 Data Summaries/index.html#additional-resources",
    "href": "modules/6 Data Summaries/index.html#additional-resources",
    "title": "6 Data Summaries",
    "section": "Additional resources",
    "text": "Additional resources\nThis chapter begins to introduce an important and very useful library called dyplr.\nhttps://dplyr.tidyverse.org\nFor a more advanced introduction see data transformation chapter from the R for Data Science book.\nhttps://r4ds.had.co.nz/transform.html"
  },
  {
    "objectID": "modules/6 Data Summaries/index.html#week-6-assignment",
    "href": "modules/6 Data Summaries/index.html#week-6-assignment",
    "title": "6 Data Summaries",
    "section": "Week 6 assignment",
    "text": "Week 6 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard.\n\nYour blog post should demonstrate that you can accomplish the major topics discussed in section 5.1 to 5.5 in the textbook.\n\nExtra blogging challenge. We have now learned the basics about how to import, summarize, and plot data. So far, the examples have used data provided by the textbook. To complete the extra blogging challenge your task is to obtain some open data from a different source, import it, summarize it (if necessary), and plot it.\n\nFor example, can you obtain, import, summarize, and plot data from the open data website of New York City?\nhttps://opendata.cityofnewyork.us"
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis.html",
    "href": "modules/7 More ggplot2/DataVis.html",
    "title": "DataVis Challenge",
    "section": "",
    "text": "See the example code at the end of this document for more examples of working ggplot2 scripts."
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis.html#data-vis-assignment",
    "href": "modules/7 More ggplot2/DataVis.html#data-vis-assignment",
    "title": "DataVis Challenge",
    "section": "Data-vis assignment",
    "text": "Data-vis assignment\nThis assignment contains several figures that were recently published in the January 2019 issue of Psychological Science. Although, this sample of figures is somewhat arbitrary, they represent a decent range of figures that are produced in Psychological research. Notably, the look and feel of these graphs suggests that that they were all made in R using the ggplot2 package. And even if they weren’t, they can all be made in ggplot2.\nYour task is to write code to reproduce each of the graphs using ggplot2. You do not have the original data for any of these graphs, and your job is to make inferences about what the data must have been. For each graph you will create a data.frame to mimic the data you see in the graph, and then use ggplot2 to make the plot.\nBy the end of this exercise you will become much more familiar with how ggplot2 works, and you will have created several examples of working ggplot2 scripts that you can use for making graphs in the future."
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis.html#list-of-figures-to-reproduce",
    "href": "modules/7 More ggplot2/DataVis.html#list-of-figures-to-reproduce",
    "title": "DataVis Challenge",
    "section": "List of Figures to reproduce",
    "text": "List of Figures to reproduce\nCalcutt, S. E., Proctor, D., & Berman, S. M. (2019). Chimpanzees (Pan troglodytes) Are More Averse to Social Than Nonsocial Risk. Psychological Science, 30, 105–115.\n\n\n\n\n\n\n\n\n\n\nCao, J., Kleiman-Weiner, M., & Banaji, M. R. (2019). People Make the Same Bayesian Judgment They Criticize in Others. Psychological Science, 30, 20–31.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJefferies, L. N., & Lollo, V. D. (2019). Sudden Events Change Old Visual Objects Into New Ones: A Possible Role for Phasic Activation of Locus Coeruleus. Psychological Science, 30, 55–64.\n\n\n\n\n\nJouravlev, O., Schwartz, R., Ayyash, D., Mineroff, Z., Gibson, E., & Fedorenko, E. (2019). Tracking Colisteners’ Knowledge States During Language Comprehension. Psychological Science, 30, 3–19.\n\n\n\n\n\nKim, H., Domenico, S. I. D., & Connelly, B. S. (2019). Self–Other Agreement in Personality Reports: A Meta-Analytic Comparison of Self- and Informant-Report Means. Psychological Science, 30, 129–138.\n\n\n\n\n\nOh, D., Buck, E. A., & Todorov, A. (2019). Revealing Hidden Gender Biases in Competence Impressions of Faces. Psychological Science, 30, 65–79.\n\n\n\n\n\nPerfecto, H., Donnelly, K., & Critcher, C. R. (2019). Volume Estimation Through Mental Simulation. Psychological Science, 30, 80–91.\n\n\n\n\n\n\n\n\n\n\nSmith, S. M., & Krajbich, I. (2019). Gaze Amplifies Value in Decision Making. Psychological Science, 30, 116–128.\n\n\n\n\n\nUitvlugt, M. G., & Healey, M. K. (2019). Temporal Proximity Links Unrelated News Events in Memory. Psychological Science, 30, 92–104."
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis_solutions.html",
    "href": "modules/7 More ggplot2/DataVis_solutions.html",
    "title": "DataVisSolutions",
    "section": "",
    "text": "See the example code at the end of this document for more examples of working ggplot2 scripts."
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis_solutions.html#data-vis-assignment-solutions",
    "href": "modules/7 More ggplot2/DataVis_solutions.html#data-vis-assignment-solutions",
    "title": "DataVisSolutions",
    "section": "Data-vis assignment solutions",
    "text": "Data-vis assignment solutions\nThis assignment contains several figures that were recently published in the January 2019 issue of Psychological Science. Although, this sample of figures is somewhat arbitrary, they represent a decent range of figures that are produced in Psychological research. Notably, the look and feel of these graphs suggests that that they were all made in R using the ggplot2 package. And even if they weren’t, they can all be made in ggplot2.\nYour task is to write code to reproduce each of the graphs using ggplot2. You do not have the original data for any of these graphs, and your job is to make inferences about what the data must have been. For each graph you will create a data.frame to mimic the data you see in the graph, and then use ggplot2 to make the plot.\nBy the end of this exercise you will become much more familiar with how ggplot2 works, and you will have created several examples of working ggplot2 scripts that you can use for making graphs in the future."
  },
  {
    "objectID": "modules/7 More ggplot2/DataVis_solutions.html#list-of-figures-to-reproduce",
    "href": "modules/7 More ggplot2/DataVis_solutions.html#list-of-figures-to-reproduce",
    "title": "DataVisSolutions",
    "section": "List of Figures to reproduce",
    "text": "List of Figures to reproduce\nCalcutt, S. E., Proctor, D., & Berman, S. M. (2019). Chimpanzees (Pan troglodytes) Are More Averse to Social Than Nonsocial Risk. Psychological Science, 30, 105–115.\n\n\n\n\n\n\nlibrary(ggplot2)\nlibrary(ggrepel)\n\nchimps&lt;-rep(c(\"Dara\",\"Rita\",\"Liza\",\"Katie\",\"Azalea\",\"Barbi\",\"Rowena\",\"Fiona\"), each=2)\nMF &lt;- c(59,60,51,57,48,33,3,4,23,43,1,42,3,38,0,10)\nCondition &lt;- rep(c(\"Social Condition\",\"Nonsocial Condition\"),8)\nAversity &lt;- rep(c(\"Not Averse\",\"Averse\"),each=8)\n\nplot_df &lt;- data.frame(chimps,\n                      MF,\n                      Condition,\n                      Aversity,\n                      chimps2=chimps)\n\nplot_df$chimps2[c(2,4,6,8,9,11,13,15)]&lt;-\"\"\n\nplot_df$Condition &lt;- factor(plot_df$Condition, levels = c(\"Social Condition\",\"Nonsocial Condition\"))\n\n\n#note the commented code shows an example of using text repel to make the labels non overlapping.\n\nggplot(plot_df, aes(x=Condition, \n                    y=MF, \n                    linetype=Aversity,\n                    group=chimps,\n                    label=chimps2))+\n  geom_line()+\n  theme_classic(base_size=13)+\n  xlab(\"\")+\n  ylab(\"Mean Frequency of Risky Choice\")+\n  theme(legend.position=\"none\") +\n  scale_y_continuous(breaks=seq(0,70,10), expand=c(0,0))+\n  coord_cartesian(ylim=c(0,70))+\n  #geom_text_repel(size=3,aes(label=chimps2))+\n  annotate(\"text\", x = .8, y = 60, label = \"Dara\")+\n  annotate(\"text\", x = .8, y = 53, label = \"Rita\")+\n  annotate(\"text\", x = .8, y = 47, label = \"Liza\")+\n  annotate(\"text\", x = .8, y = 3, label = \"Katie\")+\n  annotate(\"text\", x = 2.2, y = 45, label = \"Azalea\")+\n  annotate(\"text\", x = 2.2, y = 41, label = \"Barbi\")+\n  annotate(\"text\", x = 2.2, y = 35, label = \"Rowena\")+\n  annotate(\"text\", x = 2.2, y = 10, label = \"Fiona\")\n\n\n\n\n\n\n\n\n\n\nNotes\n\nPsychological Science has a style guide that asks authors to use the font: Helvetica Neue 57 Condensed roman font\nI installed that font on machine (found a free .ttf download), then used the showtext library to use that font with ggplot2. warning: this won’t work if you don’t have the font installed, and installing the font could be idiosyncratic, it took me at least an hour\n\n\nlibrary(showtext)\n\nLoading required package: sysfonts\n\n\nLoading required package: showtextdb\n\nfont_add(\"HelveticaNeue\",\n    regular = \"Helvetica Neue LT Std 57 Condensed.ttf\")\n## Automatically use showtext to render plots\nshowtext_auto()\n\nNS_risk&lt;-c(0,1,3,4,25,45,52,59)\nS_risk&lt;-c(12,47,4,41,48,35,55,60)\nplot_df&lt;-data.frame(NS_risk,S_risk)\n\np&lt;-ggplot(plot_df, aes(x=NS_risk,y=S_risk))+\n  geom_point(shape=18, size=1,fill=\"black\")+\n  geom_smooth(method=\"lm\",se=FALSE, color=\"black\", size=.35)+\n # theme_classic(base_size=12, base_family = \"Arial Narrow\")+\n  theme(axis.title.x=element_text(size=12,family=\"HelveticaNeue\"),\n        axis.title.y=element_text(size=12, \n                                  family=\"HelveticaNeue\"),\n        axis.text =element_text(size=11, \n                                  family=\"HelveticaNeue\",\n                                  color=\"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank())+\n  xlab(\"Average Frequency of Nonsocial Risk\")+\n  ylab(\"Average Frequency of Social Risk\")+\n  coord_cartesian(xlim=c(0,70), ylim=c(0,70))+\n  scale_x_continuous(breaks=seq(0,70,10), expand=c(0,0))+\n  scale_y_continuous(breaks=seq(0,70,10), expand=c(0,0))+\n  theme(axis.line = element_line(size = .25))+\n  theme(axis.ticks = element_line(size = .25))\n\nggsave(\"datavis_figs/Calcutt2_Crump.png\", p, width = 3, height = 3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\nknitr::include_graphics(\"datavis_figs/Calcutt2_Crump.png\")\n\n\n\n\nCao, J., Kleiman-Weiner, M., & Banaji, M. R. (2019). People Make the Same Bayesian Judgment They Criticize in Others. Psychological Science, 30, 20–31.\n\n\n\n\n\nNotes 1. ggplot automatically orders factor levels alphabetically, this examples shows a method to rearrange the order of factor levels in the data.frame before plotting\n\nstudies &lt;- rep(c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"), each=3)\nlikely &lt;- rep(c(\"Women More Likely\",\n            \"Equally Likely\",\n            \"Man more Likely\"),4)\n\npp &lt;- c(0,90,10,\n        5,60,35,\n        2,40,58,\n        5,60,35)/100\n\nplot_df &lt;- data.frame(pp,studies,likely)\n\nplot_df$likely &lt;- factor(plot_df$likely, \n                         levels = c(\"Women More Likely\",\n                                    \"Equally Likely\",\n                                    \"Man more Likely\"))\n\nplot_df$studies &lt;- factor(plot_df$studies, \n                         levels = c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"))\n\nggplot(plot_df, aes(x=studies,\n                    y=pp,\n                    group=likely,\n                    fill=likely))+\n  geom_bar(stat=\"identity\", width=.5)+\n  theme_classic(base_size=10)+\n  xlab(\"\")+\n  ylab(\"Percentage of Participants\")+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  theme(legend.title = element_blank(),\n        axis.ticks.x.bottom = element_blank())\n\n\n\n\nNotes 1. An example of violin plots, which require distributions of numbers for each level 2. An example of using two data.frames in ggplot, one with all of the raw data for each level, and another with the means and confidence intervals. Confidence intervals are computed using the t.test function\n\nA &lt;- rexp(200)\nB &lt;- rnorm(200,3,sd=1)\nC &lt;- rnorm(200,3,sd=1)\nD &lt;- rnorm(200,3,sd=1)\nDV &lt;- c(A,B,C,D)\nstudies &lt;- rep(c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"), each=200)\n\nplot_df &lt;-data.frame(DV,studies)\n\nplot_df$studies &lt;- factor(plot_df$studies, \n                         levels = c(\"Doctor \\n Study 1 \\n N = 199\",\n             \"Butcher \\n Study 2 \\n n = 199\",\n             \"Firefighter \\n Study 2 \\n n = 200\",\n             \"Construction \\n Worker \\n Study 2 \\n n = 205\"))\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nmeans_df &lt;- plot_df %&gt;%\n              group_by(studies) %&gt;%\n              summarise(M=mean(DV),\n                        CI_lower = t.test(DV)$conf.int[1],\n                        CI_upper = t.test(DV)$conf.int[2])\n\nggplot(means_df, aes(x=studies,y=M))+\n  geom_violin(data=plot_df, aes(x=studies,y=DV),fill=\"grey\")+\n  theme_classic(base_size=10)+\n  xlab(\"\")+\n  ylab(\"Evaluation of Person X\")+\n  scale_y_continuous(breaks=seq(0,7,1))+\n  coord_cartesian(ylim=c(0,7))+\n  geom_point()+\n  geom_errorbar(aes(ymin=CI_lower,ymax=CI_upper), width=.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotes: 1. An example of a histogram. Note this is incomplete because the y-axis is not showing percentages…\n\nps &lt;- rnorm(100,0,1)\ns&lt;-1:100\nplot_df&lt;-data.frame(s,ps)\n\nggplot(plot_df, aes(x=ps))+\n  geom_histogram(fill=\"green\",\n                 color=\"black\")+\n  coord_cartesian(xlim=c(-4,4))+\n  theme_classic(base_size=9)+\n  xlab(\"Log Likelihood Ratio\")+\n  ylab(\"Participants (in Each condition)\")+\n  ggtitle(\"Women Performed Surgery\")+\n  geom_vline(xintercept=0,linetype=2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNotes: 1. customizes color schemes by hard-coding 2. use facet_wrap, and take away the borders of the facet titles\n\nGender &lt;- rep(c(\"Men Performed Surgery \\n n = 152\",\n            \"Women Performed Surgery \\n n = 142\"), each =3)\nParameter &lt;- rep(c(\"Prior\",\n               \"Model \\n Posterior\",\n               \"Reported \\n Posterior\"), 2)\np &lt;- c(.7, .88, .87, .29, .72, .76)\nci &lt;- c(.05, .05, .05, .05, .05, .05)\nplot_df &lt;- data.frame(p, ci, Gender, Parameter)\nplot_df$Parameter &lt;- factor(plot_df$Parameter, \n                         levels = c(\"Prior\",\n               \"Model \\n Posterior\",\n               \"Reported \\n Posterior\"))\n\nggplot(plot_df, aes(x=Parameter, y=p, fill=Parameter))+\n  geom_bar(stat=\"identity\", position=\"dodge\")+\n  facet_wrap(~Gender)+\n  theme_classic(base_size=11)+\n  scale_fill_manual(values=c(\"#F8766D\", \"#7CAE00\", \"#C77CFF\"))+\n  ylab(\"P(Target = Doctor)\")+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  coord_cartesian(ylim=c(0,1))+\n  theme(panel.grid = element_blank(),\n        panel.spacing.x = unit(0,\"line\"),\n        panel.border = element_blank(),\n        panel.background = element_blank())+\n  theme(strip.background = element_rect(colour = 'white', fill = 'white', size = 0))+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nNotes: 1. two linear regression lines using geom_smooth(method=\"lm\") 2. The raw data is not plotted as points\n\nevaluation&lt;-c((seq(1,7,.1)+runif(61,-2,2)),\n              (seq(1,7,.1)+runif(61,-2,2)))\npTarget &lt;-c((seq(.92,.85,length.out=61)+runif(61,-.1,.1)),\n            (seq(.8,.4,length.out=61)+runif(61,-.5,.5)))\nGender &lt;- rep(c(\"Man Communicated with ATC\",\n            \"Woman Communicated with ATC\"), each=61)\nplot_df&lt;-data.frame(evaluation,pTarget,Gender)\nplot_df &lt;- plot_df %&gt;%\n              filter(evaluation&gt;=1,\n                     evaluation&lt;=7)\n\nggplot(plot_df, aes(x=evaluation,y=pTarget,\n                    group=Gender,\n                    color=Gender))+\n  geom_smooth(method=\"lm\")+\n  theme_classic()+\n  scale_y_continuous(breaks=seq(0,1,.1),labels = scales::percent)+\n  scale_x_continuous(breaks=seq(1,7,1))+\n  coord_cartesian(ylim=c(0,1))+\n  xlab(\"Evaluation of Person X\")+\n  ylab(\"P(Target = Pilot)\")+\n  theme(legend.position=c(0.45,0.2),\n        legend.title=element_blank(),\n        legend.key.size = unit(.5, \"cm\"))+\n  theme(legend.key = element_rect(colour = 'white', fill = 'white', size = 1, linetype='solid'))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nJefferies, L. N., & Lollo, V. D. (2019). Sudden Events Change Old Visual Objects Into New Ones: A Possible Role for Phasic Activation of Locus Coeruleus. Psychological Science, 30, 55–64.\n\n\n\n\n\nNotes: 1. Example of using the ggpubr package and the ggarrange function to put two separate plots side-by-side in a 2-column, 1-row, grid.\n\nlibrary(ggpubr)\n\nCondition &lt;-rep(c(\"No \\n Transient\",\"Transient\"), each=2)\nLocation &lt;-rep(c(\"Outside\",\"Inside\"),2)\nMMRT &lt;- c(304,300,290,280)\nCI_upper &lt;-c(315,310,304,290)\nCI_lower &lt;-c(295,290,283,270)\nplot_df &lt;-data.frame(Condition,Location,MMRT,CI_upper,CI_lower)\nplot_df$Location &lt;- factor(plot_df$Location, \n                         levels = c(\"Outside\",\"Inside\"))\n\nvis&lt;-ggplot(plot_df, aes(x=Condition, y=MMRT, group=Location,\n                    fill=Location))+\n  geom_bar(stat=\"identity\",position=\"dodge\", \n           color=\"black\",\n           size=.25)+\n  theme_classic()+\n  ylab(\"Mean Median RT (ms)\")+\n  coord_cartesian(ylim=c(230,340))+\n  scale_y_continuous(breaks=seq(230,340,10))+\n  scale_fill_brewer(palette=\"Greys\", direction=-1)+\n   theme(legend.position=c(0.55,0.8),\n        legend.title=element_blank(),\n        legend.key.size = unit(.5, \"cm\"))+\n  ggtitle(\"Visual Group\")\n\nCondition &lt;-rep(c(\"No \\n Transient\",\"Transient\"), each=2)\nLocation &lt;-rep(c(\"Outside\",\"Inside\"),2)\nMMRT &lt;- c(295,290,265,250)\nCI_upper &lt;-c(305,300,275,260)\nCI_lower &lt;-c(285,280,255,240)\nplot_df &lt;-data.frame(Condition,Location,MMRT,CI_upper,CI_lower)\nplot_df$Location &lt;- factor(plot_df$Location, \n                         levels = c(\"Outside\",\"Inside\"))\n\naud&lt;-ggplot(plot_df, aes(x=Condition, y=MMRT, group=Location,\n                    fill=Location))+\n  geom_bar(stat=\"identity\",position=\"dodge\", \n           color=\"black\",\n           size=.25)+\n  theme_classic()+\n  ylab(\"Mean Median RT (ms)\")+\n  coord_cartesian(ylim=c(230,340))+\n  scale_y_continuous(breaks=seq(230,340,10))+\n  scale_fill_brewer(palette=\"Greys\", direction=-1)+\n   theme(legend.position=\"none\")+\n  ggtitle(\"Auditory Group\")\n\nggarrange(vis,aud)\n\n\n\n\nJouravlev, O., Schwartz, R., Ayyash, D., Mineroff, Z., Gibson, E., & Fedorenko, E. (2019). Tracking Colisteners’ Knowledge States During Language Comprehension. Psychological Science, 30, 3–19.\n\n\n\n\n\n\nx &lt;- runif(25,-2.5,3)\ny &lt;- runif(25,-10,15)\nr &lt;- round(cor(x,y), digits=2)\ndf &lt;- data.frame(x,y)\n\na &lt;- ggplot(df, aes(x=x, y=y))+\n  geom_point()+\n  geom_smooth(method=\"lm\", se=FALSE)+\n  xlab(\"Social N400\")+\n  ylab(\"Autism-Spectrum \\n Quotient (score)\")+\n  scale_x_continuous(breaks=seq(-2.5,2.5,2.5))+\n  coord_cartesian(xlim=c(-2.5,3))+\n  annotate(\"text\",label=paste(\"r = \",r), x=2.5, y=10)\n\nx &lt;- runif(25,-2.5,3)\ny &lt;- runif(25,-10,15)\nr &lt;- round(cor(x,y), digits=2)\ndf &lt;- data.frame(x,y)\n\nb &lt;- ggplot(df, aes(x=x, y=y))+\n  geom_point()+\n  geom_smooth(method=\"lm\", se=FALSE)+\n  xlab(\"Social N400\")+\n  ylab(\"\\'Reading the Mind in the \\n Eyes\\' Test (score\")+\n  scale_x_continuous(breaks=seq(-2.5,2.5,2.5))+\n  coord_cartesian(xlim=c(-2.5,3))+\n  annotate(\"text\",label=paste(\"r = \",r), x=2.5, y=10)\n\nx &lt;- runif(25,-2.5,3)\ny &lt;- runif(25,-10,15)\nr &lt;- round(cor(x,y), digits=2)\ndf &lt;- data.frame(x,y)\n\nc &lt;- ggplot(df, aes(x=x, y=y))+\n  geom_point()+\n  geom_smooth(method=\"lm\", se=FALSE)+\n  xlab(\"Social N400\")+\n  ylab(\"Empathy Quotient Test \\n (score\")+\n  scale_x_continuous(breaks=seq(-2.5,2.5,2.5))+\n  coord_cartesian(xlim=c(-2.5,3))+\n  annotate(\"text\",label=paste(\"r = \",r), x=2.5, y=10)\n\nggarrange(a,b,c,nrow=3, ncol=1)\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nKim, H., Domenico, S. I. D., & Connelly, B. S. (2019). Self–Other Agreement in Personality Reports: A Meta-Analytic Comparison of Self- and Informant-Report Means. Psychological Science, 30, 129–138.\n\n\n\n\n\n\npeople &lt;- rep(c(\"Family\",\"Friends\",\"Colleagues\",\"Strangers\"), each=5)\nbig_five &lt;- rep(c(\"Emotional \\n Stability\",\"Extraversion\",\"Openness/ \\n Intellect\",\n              \"Agreeableness\",\"Consientiousness\"), 4)\nmean_difference &lt;-c(0,.3,.8,.4,.4,\n                    c(0,.3,.8,.4,.4)-.2,\n                    c(0,.3,.8,.4,.4)-.21,\n                    c(0,.3,.8,.4,.4)-.25)\ndf &lt;- data.frame(mean_difference,people,big_five)\n\ndf$big_five &lt;- factor(df$big_five, \n                         levels = c(\"Emotional \\n Stability\",\"Extraversion\",\"Openness/ \\n Intellect\",\n              \"Agreeableness\",\"Consientiousness\"))\n\ndf$people &lt;- factor(df$people, \n                         levels = c(\"Family\",\"Friends\",\"Colleagues\",\"Strangers\"))\n\nggplot(df, aes(x=big_five, y=mean_difference,\n               group=people,\n               shape=people,\n               linetype=people,\n               color=people))+\n  scale_color_brewer(palette=\"Greys\", direction=-1)+\n  geom_point()+\n  geom_line()+\n  xlab(\"\")+\n  ylab(\"Mean Difference\")+\n  coord_cartesian(ylim=c(-.8,.8))+\n  scale_y_continuous(breaks=seq(-.8,.8,.2))+\n  theme_classic()+\n  geom_hline(yintercept=0)+\n  theme(axis.line.x.bottom = element_blank(),\n        axis.ticks.x.bottom = element_blank(),\n        legend.title = element_blank())\n\n\n\n\nOh, D., Buck, E. A., & Todorov, A. (2019). Revealing Hidden Gender Biases in Competence Impressions of Faces. Psychological Science, 30, 65–79.\n\n\n\n\n\nPerfecto, H., Donnelly, K., & Critcher, C. R. (2019). Volume Estimation Through Mental Simulation. Psychological Science, 30, 80–91.\n\n\n\n\n\n\n\n\n\n\nSmith, S. M., & Krajbich, I. (2019). Gaze Amplifies Value in Decision Making. Psychological Science, 30, 116–128.\n\n\n\n\n\nUitvlugt, M. G., & Healey, M. K. (2019). Temporal Proximity Links Unrelated News Events in Memory. Psychological Science, 30, 92–104."
  },
  {
    "objectID": "modules/7 More ggplot2/ggplot_examples.html",
    "href": "modules/7 More ggplot2/ggplot_examples.html",
    "title": "ggplot basic examples",
    "section": "",
    "text": "If you are confident that you can accomplish the items below, then you are well on your way to becoming proficient in ggplot2.\n\n\n\nMake a scatterplot between an x an y variable\n\n\nadd a regression line to plot\n\n\nMake a bar graph\n\n\nfor one factor with multiple levels\nfor two factors, each with multiple levels\nfor three or more factors (using facet_wrap)\n\n\nMake a line graph\n\n\nfor one factor with multiple levels\nfor two factors, each with multiple levels\nfor three or more factors (using facet_wrap)\n\n\nAdd error bars to bar or line graph\nMake a histogram\n\n\n\n\n\nEdit title\nEdit y-axis label\nEdit x-axis label\nChange theme (e.g., theme_classic)\nChange size of figure (width, height)\nChange y-axis range\nre-order categorical factor levels"
  },
  {
    "objectID": "modules/7 More ggplot2/ggplot_examples.html#checklist-of-ggplot2-skills",
    "href": "modules/7 More ggplot2/ggplot_examples.html#checklist-of-ggplot2-skills",
    "title": "ggplot basic examples",
    "section": "",
    "text": "If you are confident that you can accomplish the items below, then you are well on your way to becoming proficient in ggplot2.\n\n\n\nMake a scatterplot between an x an y variable\n\n\nadd a regression line to plot\n\n\nMake a bar graph\n\n\nfor one factor with multiple levels\nfor two factors, each with multiple levels\nfor three or more factors (using facet_wrap)\n\n\nMake a line graph\n\n\nfor one factor with multiple levels\nfor two factors, each with multiple levels\nfor three or more factors (using facet_wrap)\n\n\nAdd error bars to bar or line graph\nMake a histogram\n\n\n\n\n\nEdit title\nEdit y-axis label\nEdit x-axis label\nChange theme (e.g., theme_classic)\nChange size of figure (width, height)\nChange y-axis range\nre-order categorical factor levels"
  },
  {
    "objectID": "modules/7 More ggplot2/ggplot_examples.html#example-code",
    "href": "modules/7 More ggplot2/ggplot_examples.html#example-code",
    "title": "ggplot basic examples",
    "section": "Example code",
    "text": "Example code\nMake sure you load ggplot2 before you try to use it.\n\nlibrary(ggplot2)\n\n\nScatterplot\n\n# Create dataframe\na &lt;- c(1, 2, 3, 2, 3, 4, 5, 4)\nb &lt;- c(4, 3, 4, 3, 2, 1, 2, 3)\nplot_df &lt;- data.frame(a, b)\n\n# basic scatterplot\nggplot(plot_df, aes(x = a, y = b)) +\n  geom_point()\n\n\n\n# customize, add regression line\nggplot(plot_df, aes(x = a, y = b)) +\n  geom_point(size = 2) +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim = c(0, 7), ylim = c(0, 10)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"I made a scatterplot\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nbar graph\n1 factor\n\n#Create a dataframe\nfactor_one &lt;- as.factor(c(\"A\", \"B\", \"C\"))\ndv_means &lt;- c(20, 30, 40)\ndv_SEs   &lt;- c(4, 3.4, 4)\nplot_df &lt;- data.frame(factor_one,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df, aes(x = factor_one, y = dv_means)) +\n  geom_bar(stat = \"identity\")\n\n\n\n# adding error bars, customizing\n\nggplot(plot_df, aes(x = factor_one, y = dv_means)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = dv_means - dv_SEs,\n                    ymax = dv_means + dv_SEs),\n                width = .2) +\n  coord_cartesian(ylim = c(0, 100)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"I made a bar graph\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n2 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(as.factor(c(\"A\", \"B\", \"C\")), 2)\nfactor_two &lt;- rep(as.factor(c(\"IIA\", \"IIB\")), 3)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n       aes(\n         x = factor_one,\n         y = dv_means,\n         group = factor_two,\n         color = factor_two\n       )) +\n  geom_bar(stat = \"identity\", position = \"dodge\")\n\n\n\n# adding error bars, customizing\n\nggplot(\n  plot_df,\n  aes(\n    x = factor_one,\n    y = dv_means,\n    group = factor_two,\n    color = factor_two,\n    fill = factor_two\n  )\n) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  geom_errorbar(\n    aes(ymin = dv_means - dv_SEs,\n        ymax = dv_means + dv_SEs),\n    position = position_dodge(width = 0.9),\n    width = .2,\n    color = \"black\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"Bar graph 2 factors\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n3 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(rep(as.factor(c(\"A\", \"B\", \"C\")), 2), 2)\nfactor_two &lt;- rep(rep(as.factor(c(\"IIA\", \"IIB\")), 3), 2)\nfactor_three &lt;- rep(as.factor(c(\"IIIA\", \"IIIB\")), each = 6)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40,\n              10, 20, 50, 50, 10, 10)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4,\n              1, 2, 1, 2, 3, 2)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      factor_three,\n                      dv_means,\n                      dv_SEs)\n\n# basic bar graph\n\nggplot(plot_df,\n       aes(\n         x = factor_one,\n         y = dv_means,\n         group = factor_two,\n         color = factor_two\n       )) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap( ~ factor_three)\n\n\n\n\n\n\nLine Graph\n1 factor\n\n#Create a dataframe\nfactor_one &lt;- as.factor(c(\"A\", \"B\", \"C\"))\ndv_means &lt;- c(20, 30, 40)\ndv_SEs   &lt;- c(4, 3.4, 4)\nplot_df &lt;- data.frame(factor_one,\n                      dv_means,\n                      dv_SEs)\n\n# basic line graph\n\nggplot(plot_df, aes(x = factor_one, y = dv_means, group = 1)) +\n  geom_point() +\n  geom_line()\n\n\n\n# adding error bars, customizing\n\nggplot(plot_df, aes(x = factor_one, y = dv_means, group = 1)) +\n  geom_point() +\n  geom_line() +\n  geom_errorbar(aes(ymin = dv_means - dv_SEs,\n                    ymax = dv_means + dv_SEs),\n                width = .2) +\n  coord_cartesian(ylim = c(0, 100)) +\n  xlab(\"x-axis label\") +\n  ylab(\"y-axis label\") +\n  ggtitle(\"I made a line graph\") +\n  theme_classic(base_size = 12) +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n2 factor\n\n#Create a dataframe\nfactor_one &lt;- rep(as.factor(c(\"A\", \"B\", \"C\")), 2)\nfactor_two &lt;- rep(as.factor(c(\"IIA\", \"IIB\")), 3)\ndv_means &lt;- c(20, 30, 40, 20, 40, 40)\ndv_SEs   &lt;- c(4, 3.4, 4, 3, 2, 4)\nplot_df &lt;- data.frame(factor_one,\n                      factor_two,\n                      dv_means,\n                      dv_SEs)\n\n# basic line graph\n\nggplot(\n  plot_df,\n  aes(\n    x = factor_one,\n    y = dv_means,\n    group = factor_two,\n    color = factor_two,\n    linetype = factor_two\n  )\n) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\nHistogram\nbase R\n\na &lt;- rnorm(100, 0, 1)\nhist(a)\n\n\n\n\n\nscore &lt;- rnorm(100, 0, 1)\nn &lt;- 1:100\nplot_df &lt;- data.frame(score, n)\n\nggplot(plot_df, aes(x = score)) +\n  geom_histogram(bins = 10,\n                 color = \"white\")"
  },
  {
    "objectID": "modules/7 More ggplot2/index.html",
    "href": "modules/7 More ggplot2/index.html",
    "title": "7 More ggplot2",
    "section": "",
    "text": "We are going to skip the next chapter in the book and spend more time on ggplot2 for making graphs.\nThe ggplot2 package is extremely deep and powerful. We will become more familiar with its capabilities by working through multiple examples, and then attempting to reproduce existing figures published in journals."
  },
  {
    "objectID": "modules/7 More ggplot2/index.html#additional-resources",
    "href": "modules/7 More ggplot2/index.html#additional-resources",
    "title": "7 More ggplot2",
    "section": "Additional resources",
    "text": "Additional resources\n\nggplot2 additional resources\n\nhttps://ggplot2.tidyverse.org\nhttps://r4ds.had.co.nz/data-visualisation.html\nhttps://ggplot2-book.org\nhttp://r-statistics.co/ggplot2-Tutorial-With-R.html\nhttps://datacarpentry.org/R-ecology-lesson/04-visualization-ggplot2.html\n\n\n\nAdd-on packages\n\nhttps://www.ggplot2-exts.org A repository of 50+ add on packages for ggplot2\nhttps://gganimate.com\n\nallows you to create animated .gifs of ggplots\nI made a bunch of animated gifs for a statistics textbook. They are all here along with the code https://crumplab.github.io/statistics/gifs.html\n\nggrepel allows you to repel overlapping text labels away from each other.\nesquisse a GUI (graphic user interface) that allows you make ggplot graphs using drag-drop, and clickable options\nggedit similar to above, clickable editing of ggplot graphs\nplotly a package similar to ggplot, makes a whole variety of graphs, mainly for use in websites. Allows interactive graphs.\nggpubr (install from CRAN), many useful things, including the ggarrange function which allows you to knit multiple plots together\nggthemes extra themes, scales, and geoms"
  },
  {
    "objectID": "modules/7 More ggplot2/index.html#week-7-assignment",
    "href": "modules/7 More ggplot2/index.html#week-7-assignment",
    "title": "7 More ggplot2",
    "section": "Week 7 assignment",
    "text": "Week 7 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard. Blog post ideas will be discussed in class, and this assignment will be updated for clarity.\n\n\nbe able to make a scatterplot between an x an y variable\nbe able to make a line graph with points\nbe able to make a bar graph\nbe able to make a bar graph with error bars\nattempt to reproduce as many figures from the examples as possible."
  },
  {
    "objectID": "modules/8 Data Relations/index.html",
    "href": "modules/8 Data Relations/index.html",
    "title": "8 Data Relations",
    "section": "",
    "text": "Read the chapter.\nhttps://psyteachr.github.io/ads-v2/07-joins.html"
  },
  {
    "objectID": "modules/8 Data Relations/index.html#read",
    "href": "modules/8 Data Relations/index.html#read",
    "title": "8 Data Relations",
    "section": "",
    "text": "Read the chapter.\nhttps://psyteachr.github.io/ads-v2/07-joins.html"
  },
  {
    "objectID": "modules/8 Data Relations/index.html#additional-resources",
    "href": "modules/8 Data Relations/index.html#additional-resources",
    "title": "8 Data Relations",
    "section": "Additional resources",
    "text": "Additional resources\nTBD"
  },
  {
    "objectID": "modules/8 Data Relations/index.html#week-8-assignment",
    "href": "modules/8 Data Relations/index.html#week-8-assignment",
    "title": "8 Data Relations",
    "section": "Week 8 assignment",
    "text": "Week 8 assignment\n\nWrite your blog post, and submit the link to this assignment on blackboard. Blog post ideas will be discussed in class, and this assignment will be updated for clarity."
  },
  {
    "objectID": "modules/9 Practice Report/index.html",
    "href": "modules/9 Practice Report/index.html",
    "title": "9 Practice Report",
    "section": "",
    "text": "Read the chapter.\nhttps://psyteachr.github.io/ads-v2/06-formative.html"
  },
  {
    "objectID": "modules/9 Practice Report/index.html#read",
    "href": "modules/9 Practice Report/index.html#read",
    "title": "9 Practice Report",
    "section": "",
    "text": "Read the chapter.\nhttps://psyteachr.github.io/ads-v2/06-formative.html"
  },
  {
    "objectID": "modules/9 Practice Report/index.html#goals-and-additional-resources",
    "href": "modules/9 Practice Report/index.html#goals-and-additional-resources",
    "title": "9 Practice Report",
    "section": "Goals and additional resources",
    "text": "Goals and additional resources\nIn this exercise you receive a sample dataset, and you receive a finished reproducible report showing visualizations of the data. Your task is to reproduce the report using the skills you have learned in this class.\nThe data and example report are available in section 6.3 of the textbook. We have been completing this assignment in class, and there are examples in the course blog."
  },
  {
    "objectID": "modules/9 Practice Report/index.html#week-9-assignment",
    "href": "modules/9 Practice Report/index.html#week-9-assignment",
    "title": "9 Practice Report",
    "section": "Week 9 assignment",
    "text": "Week 9 assignment\n\nMake a new blog post for this assignment. Obtain the data, and then attempt to reproduce the sample report. Your blog post should look as close to the example report as possible.\n\nMidterm replacement option and extra credit.\nYou can complete this assignment in place of part 2 of the midterm. If you complete both, then you get extra credit for part 2 of the midterm, as well as credit for this assignment."
  },
  {
    "objectID": "modules/Final Project/index.html",
    "href": "modules/Final Project/index.html",
    "title": "Final Project",
    "section": "",
    "text": "The final project asks students to obtain an open data set, and then conduct a reproducible visualization of the results. By coding the whole set of operations using R, the analysis show be independently reproducible and verifiable by another person because they could obtain the same data set and analysis code, and by compiling the code show that the same analysis can be reproduced.\nWe will spend several classes looking at examples of completing a final project. Your final project will be added as another blog post.\n15 points\nThe basic steps are:\nHere are a few tips for finding a psych paper with open data. Most important, for this assignment you do not need to re-analyze all of the data from a particular paper. Many papers have multiple experiments, and multiple analyses, including analyses you may not be familiar with. You can restrict your re-analysis to a portion of the paper that involves a data-visualization of interest.\nA minimal example of a final prject is on the example blog: https://crumplab.com/CrumplabExampleBlog/posts/week_12_ExampleFinal/ExampleFinal.html"
  },
  {
    "objectID": "modules/Final Project/index.html#extra-credit",
    "href": "modules/Final Project/index.html#extra-credit",
    "title": "Final Project",
    "section": "Extra Credit",
    "text": "Extra Credit\n\nFor 5 extra credit points, you can choose to convert your final project into a brief presentation, and deliver the presentation to class during our final exam period.\n\n\nUse quarto to create a slide deck for your presentation\nSuggested slides include:\n\nTitle\nResearch question\nSource of open-data\noriginal data-visualization\nyour data-visualization\nDiscussion of results and reproducibility attempt"
  },
  {
    "objectID": "modules/General Assignments/index.html",
    "href": "modules/General Assignments/index.html",
    "title": "General Assignments",
    "section": "",
    "text": "This is a list of general assignments that are not assigned for a specific week."
  },
  {
    "objectID": "modules/General Assignments/index.html#ga3-do-a-tidy-tuesday",
    "href": "modules/General Assignments/index.html#ga3-do-a-tidy-tuesday",
    "title": "General Assignments",
    "section": "GA3: Do a tidy tuesday",
    "text": "GA3: Do a tidy tuesday\nUsefulness: VERY HIGH\nTidy Tuesday is a weekly challenge to wrangle some data in R and produce a data-visualization. There is a new dataset every Tuesday, and an archive of past datasets.\nThe official repository for everything Tidy Tuesday is https://github.com/rfordatascience/tidytuesday.\nThere is also a podcast https://www.tidytuesday.com by the R4DS (R for Data science) online learning community.\nThis assignment involves doing a Tidy Tuesday challenge and posting your analysis on your blog. Get the data, figure out how to wrangle it for your intended data-visualization, then create a visualization of the data that is useful for “seeing” patterns in the data."
  },
  {
    "objectID": "modules/Midterm Project/index.html",
    "href": "modules/Midterm Project/index.html",
    "title": "Midterm Project",
    "section": "",
    "text": "The midterm project is in two parts, each worth 5 points. The assignment is due before spring break. I encourage you to engage with this project immediately.\nI will post video tutorials of this project to help you out. This project is for you to clarify basic concepts for yourself. It is most important that you feel confident that you can explain and use the basic concepts, and this project gives a structured assignment to help you assess this for yourself.\nThe midterm is worth 10 points, each part below is worth 5 points."
  },
  {
    "objectID": "modules/Midterm Project/index.html#m1-explaining-basic-programming-skills",
    "href": "modules/Midterm Project/index.html#m1-explaining-basic-programming-skills",
    "title": "Midterm Project",
    "section": "M1: Explaining Basic programming skills",
    "text": "M1: Explaining Basic programming skills\nDue: March 31st, 2023 Points: 5\nWrite a blog post where you demonstrate your ability to use these basic programming concepts in R.\n\nR objects: show that you understand and can create/use objects of various types, including at least: character/string, numeric, integer, logical, data.frame, and list. Show that you can index objects appropriately (e.g., locate elements of an object, change elements of an object etc.)\nLogical operations: show that you understand and can use logical operators in R (e.g., == | &gt; &lt; &gt;= &lt;=)\nLoops: Show that you understand the components of a for loop, and that you can use a for loop.\nFunctions: Show that you understand the syntax for declaring your own function, and that you can declare and run your own custom function to accomplish some task (you choose what the function does)."
  },
  {
    "objectID": "modules/Midterm Project/index.html#m2-solving-problems",
    "href": "modules/Midterm Project/index.html#m2-solving-problems",
    "title": "Midterm Project",
    "section": "M2: Solving Problems",
    "text": "M2: Solving Problems\nDue: March 31st, 2023 Points: 5\nAn algorithm combines some or all of the basic components from part 1 to solve a computational problem. The purpose of part II is to give you practice opportunities to learn and demonstrate that you can use all of the above elements to write a script to solve a problem. There are many example problems to choose from in the second general assignment.\nIt can be difficult to apply basic programming concepts to real problems when you are learning to code. Having concrete problems to solve can be very helpful. Below is a list of problems that can be solved with R code. They are not necessarily related to solving data-visualization problems. They are arranged roughly in order from easier to harder.\nI think that if you can code all of the steps to solve the snakes and ladders problem (chutes and ladders), then you have demonstrated a wide variety of generalizable skills that will be very helpful down the road. You might never re-use the code you wrote, but the process of breaking down large problems into smaller ones and converting the problem into a set of computational tasks is immensely generalizable. These skills don’t come for free, and much practice is required. This assignment is an opportunity for practice, to show your work, and to refine your code.\nThe list of problems is published here:\nhttps://crumplab.com/rstatsforpsych/practice-problems.html\nThere is a list of easier problems, and a list of harder problems. There are two videos throughout to provide tutorial support.\nInstructions\n\nCreate a new blog post for solving problems from this list\nCreate sections within the post to describe each problem, and then add R code chunks to solve each problem.\nFor a deeper learning experience, attempt to solve each problem in more than one way.\n\nMinimal expectations: Solve at least two of the hard problems. The more you put in the more you will get out."
  },
  {
    "objectID": "modules/index.html",
    "href": "modules/index.html",
    "title": "Modules",
    "section": "",
    "text": "This is a 15 week course, with roughly 14 modules. The practical goal of the course is to train a broad base of data-analysis and visualization skills using open-source software tools like R.\nThe modules roughly track the ten chapters of the textbook:\nhttps://psyteachr.github.io/ads-v2/"
  },
  {
    "objectID": "modules/index.html#module-structure",
    "href": "modules/index.html#module-structure",
    "title": "Modules",
    "section": "Module structure",
    "text": "Module structure\nIn general, modules will contain a reading, additional resources, and a weekly assignment.\nThe modules will be updated across the semester as needed."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Under construction\n\n\n\nThis syllabus is under construction until Spring 2023\n\n\nSpring 2023\nSection: PSYC 3470: 30351, SOCY 3507: 46070\nTime: 11:00am - 12:15pm, Monday and Wednesday\nLocation: James 4607\nOffice Hours: (zoom link posted on Blackboard)\nInstructor: Dr. Matthew Crump\nEmail: mcrump@brooklyn.cuny.edu (please put ‘’Psyc 3470’ in subject line)\n\n\nPSYC 3470: Data Analytics and Data Visualization in the Social and Behavioral Sciences\n3 hours; 3 credits\nCatalogue Description: How the “data revolution” has transformed the way we understand and interact with the world around us. Fundamental concepts and practical techniques and skills needed for data analytics and data visualization. Availability of large datasets and their use across a variety of settings, including social networks, libraries, governments, non-profits, etc. The emergence of practices with regard to data analysis and visual communication in the social and behavioral sciences. This course is the same as Sociology 3507.\n\n\nStudents will:\n\nDevelop familiarity and basic competency with concepts and techniques for data analytics and visualization\n\nOutcome: students will create and contribute to a weekly learning blog to practice and demonstrate their skill-acquisition process\n\nDevelop competencies in data structures, importing, filtering, wrangling, and curation techniques necessary for analysis and visualization\n\nOutcomes: competencies assessed and demonstrated in weekly assignments\n\nUnderstand principles of automation and reproducibility and learn how to produce and communicate computationally reproducible data analysis projects\n\nOutcomes: students create final project website and deliver a class presentation about their final research project.\n\nUnderstand and critically reflect upon data usage practices in society\n\nOutcomes: demonstrated in class room discussions and reflections on readings.\n\n\n\n\n\n\nAll of the course materials will be available in a timely fashion on this course website and/or posted on blackboard.\nLink to the course website: https://crumplab.com/psyc3470\n\n\n“Applied Data Skills: Processing & Presenting Data” (2023) Emily Nordmann and Lisa DeBruine.\nhttps://psyteachr.github.io/ads-v2\nThe textbook is a free and open-source web book. There are many additional free resources for learning R that will be discussed and made available throughout the semester in the compendium.\n\n\n\n\nThere are 15 weeks. This is an in-person class, and students are expected to participate in all aspects of the class. This is a class that involves learning computer programming skills for data-visualization and analysis. The assumption is that students may possess no prior skills in this area, so the course has an applied training component. Class time will involve mixtures of activities, including lectures, group-work, applied coding activities, presentations, and discussions.\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nDate\nTopic\n\n\n\n\nW0 M:\nJanuary 25, 2023\nIntroduction\n\n\nW1 M:\nJanuary 30, 2023\nIntroduction\n\n\nW1 W:\nFebruary 1, 2023\nIntro to R and Rstudio\n\n\nW2 M:\nFebruary 6, 2023\nIntro to R and Rstudio\n\n\nW2 W:\nFebruary 8, 2023\nReports with R Markdown\n\n\nNo class - College Closed\nFebruary 13, 2023\n\n\n\nW3 W:\nFebruary 15, 2023\nReports with R Markdown\n\n\nNo class - College closed\nFebruary 20, 2023\n\n\n\nW4 T(M):\nFebruary 21, 2023\nData Visualisation\n\n\nW4 W:\nFebruary 22, 2023\nData Visualisation\n\n\nW5 M:\nFebruary 27, 2023\nData Import\n\n\nW5 W:\nMarch 1, 2023\nData Import\n\n\nW6 M:\nMarch 6, 2023\nData Summaries\n\n\nW6 W:\nMarch 8, 2023\nData Summaries\n\n\nW7 M:\nMarch 13, 2023\nMore ggplot2\n\n\nW7 W:\nMarch 15, 2023\nMore ggplot2\n\n\nW8 M:\nMarch 20, 2023\nData Relations\n\n\nW8 W:\nMarch 22, 2023\nData Relations\n\n\nW9 M:\nMarch 27, 2023\nPractice Report\n\n\nW9 W:\nMarch 29, 2023\nPractice Report\n\n\nW10 M:\nApril 3, 2023\nPractice Report\n\n\nSpring Break\nApril 5, 2023\n\n\n\nSpring Break\nApril 12, 2023\n\n\n\nW11 M:\nApril 17, 2023\nData Tidying\n\n\nW11 W:\nApril 19, 2023\nData Tidying\n\n\nW12 M:\nApril 24, 2023\nData Wrangling\n\n\nW12 W:\nApril 26, 2023\nData Wrangling\n\n\nW13 M:\nMay 1, 2023\nCustomising Visualizations & Reports\n\n\nW13 W:\nMay 3, 2023\nCustomising Visualizations & Reports\n\n\nW14 M:\nMay 8, 2023\nTidy Tuesday\n\n\nW14 W:\nMay 10, 2023\nTidy Tuesday\n\n\nReading Day\nMay 12, 2023\n\n\n\nW15 M:\nMay 15, 2023\nWrap-up\n\n\nLast day of classes\nMay 16, 2023\n\n\n\nW15 M:\nMay 17, 2023\nFinal Exam Period 10:30am - 12:30pm\n\n\n\n\n\n\n\n\nThroughout this course you will learn how to analyse and communicate data using reproducible computational methods. These methods allow you to communicate information in many formats including websites, interactive web apps, slide decks, pdfs, word documents, books, web-books, and more. Students can use these very same methods to create their own personal websites, which can be used as a digital portfolio to showcase examples of their work and demonstrate their skills. To support digital portfolio development, students will learn to create a personal website and blog. Students will add content to their websites in the form of blogs and other weekly assignment content prompts. By the end of the course students will have created evidence of their learning process in the form of their course website and blog. Students can choose to share their coursework publicly or privately. For more information on see notes on privacy and sharing in the compendium.\n\n\n\nThis is an engagement and skills-acquisition based course. At the beginning of the course and throughout, students will be given instruction on building and maintaining a website using quarto and github pages. Each week students will contribute blog posts and other content to their websites in response to module assignments. Students will be expected to submit URL links to their blogs using Blackboard. Students are expected to attend and participate in each class. The final project includes conducting, communicating, and preserving a reproducible data analysis project.\n\n\n\n\n\nAssignment\nPoints\nTotal\n\n\n\n\nCourse blog/website\n5\n5\n\n\nWeekly Blog post\n4\n60\n\n\nAttendance\n1\n15\n\n\nMidterm project\n10\n10\n\n\nFinal Project\n15\n15\n\n\n\n\n100\n\n\nExtra Credit\n\n\n\n\nTidy Tuesday x3\n5\n15\n\n\nFinal Presentation\n5\n5\n\n\n\nPercentage grades are converted to letter grades according to the following rubric.\n\n\n\nLetter grade\nRange\n\n\n\n\nA+\n96.67-100\n\n\nA\n93.33-96.66\n\n\nA-\n90-93.32\n\n\nB+\n86.67-89.99\n\n\nB\n83.33-86.66\n\n\nB-\n80-83.32\n\n\nC+\n76.67-79.99\n\n\nC\n73-76.66\n\n\nC-\n70-72.99\n\n\nD+\n66.67-69.99\n\n\nD\n63.33-66.66\n\n\nD-\n60-63.32\n\n\nF\n0-59.99\n\n\n\n\n\n\n\nStudents are expected to attend and participate in each class.\n\n\n\n\n\nDue dates are suggestions for completing coursework on a weekly basis. You may be able to work ahead, but you are not encouraged to fall behind.\nYou should email me if you have an exceptional circumstance preventing you from taking an assessment during an assessment week.\n\n\n\nThe syllabus may be updated for clarity or to make adjustments for pedagogical purposes. The most current version of the syllabus is always available from the course website.\n\n\n\nIn the event of an emergency, contact me as soon as possible. If you are missing an exam for religious reasons refer to the state law regarding non-attendance because of religious beliefs noted in the front matter of the Undergraduate Bulletin and Graduate Bulletin. These may be found on the Academic Calendars, Course Schedules, and Bulletins page of the Registrar’s website. See also the student bereavement policy at http://www.brooklyn.cuny.edu/web/about/initiatives/policies/bereavement.php.\n\n\n\n\nIn order to receive disability-related academic accommodations students must first be registered with the Center for Student Disability Services. Students who have a documented disability or suspect they may have a disability are invited to set up an appointment with the Director of the Center for Student Disability Services, at 718-951-5538. If you have already registered with the Center for Student Disability Services, please provide your professor with the course accommodation form and discuss your specific accommodation with him/her.\n\n\n\n\nI will regularly use e-mail via blackboard to send out announcements, changes in the syllabus, reminders about tests or due dates etc. It is your responsibility to check e-mail regularly to keep up-to-date with these announcements. I will use the e-mail address you have listed with the College. Therefore, please make sure that this is indeed the correct address.\nIf you have questions please email me:\n\nput PSYC 3470 in your subject line\nemail me at: mcrump@brooklyn.cuny.edu\n\n\n\n\nThe Library maintains a collection of links to sites that can assist you with proper citation format and paraphrasing and quoting other authors at Research & Writing Help. The Learning Center has writing tutors available to help you with your writing http://lc.brooklyn.cuny.edu/.\nThe best learning is done in conversation with others, whether they are people—classmates, teachers, friends—or texts—books, articles, essays, poems, films etc. It should not be a solitary process. However, the assignments that you hand in for this course must be done on your own, should represent your own thinking, and should be original work that you have done for this particular course. A good way to balance these two seemingly contradictory approaches (collaborative learning and original individually-produced work) without knowingly—or, even unwittingly—resorting to plagiarism or other forms of academic misconduct is to learn and meticulously observe the rules for citing the work of others (this could be the great point your roommate made that you used in your paper, it could be a well-turned phrase from an academic essay, or it could be anything in between). It is your responsibility to learn what constitutes plagiarism and the correct rules for citing sources—read the information on the following website carefully: http://www.brooklyn.cuny.edu/bc/policies/. The bottom line is: passing off anyone’s words or ideas as your own for any reason whatsoever is plagiarism.\n\n\n\n\nIt is the responsibility of each student to understand and act in accordance with the University’s policy on Academic Integrity, described below.\n\n\nThe faculty and administration of Brooklyn College support an environment free from cheating and plagiarism. Each student is responsible for being aware of what constitutes cheating and plagiarism and for avoiding both. The complete text of the CUNY Academic Integrity Policy and the Brooklyn College procedure for implementing that policy can be found at this site. If a faculty member suspects a violation of academic integrity and, upon investigation, confirms that violation, or if the student admits the violation, the faculty member MUST report the violation.\n\n\n\nRemember, you are responsible for not cheating or violating CUNY’s Academic Integrity Policy. You are responsible for understanding that policy, and for conducting yourself in a manner such that you do not violate the policy.\nThe above link lists many examples of cheating and plagiarism that are not allowed. There are many more specific acts that you should NOT do. Here is an additional list of activities that will be sufficient cause for immediate failure in the course.\n\nDo not take pictures of exam or quiz questions and share them with other students\nDo not give other students answers during an exam or quiz, or any other assignment that is an individual assignment\nDo not copy work from another source and submit it as your own\nDo not copy and paste text from the internet and submit it as your own words\nDo not copy and paste text and slightly alter wording to pass the work off as your own\nDo not hire someone else to do the coursework for you\nDo not copy and paste text into a paraphrasing app, and then submit the output of the paraphrasing app as your own work\nDo not copy random words from the internet that have nothing to do with the assignment and submit them as your own work.\nDo not work on individual assignments with other students, share answers or other material, and then all hand in versions of the same thing that are slightly different.\nDo not plagiarize yourself by submitting work that you have previously completed in another class.\n\n\n\n\nIf a faculty member suspects a violation of academic integrity and, upon investigation, confirms that violation, or if the student admits the violation, the faculty member MUST report the violation. Students should be aware that faculty may use plagiarism detection software.\nThere is no excuse for cheating. Students who are caught cheating may receive a failing grade for the entire course. All students who violate the academic integrity will receive a Faculty Action Report, which will go on their personal file at the Academic Integrity Office.\n\n\n\n\nIf you have questions about the syllabus, let’s talk about it in class, and/or please create a thread to discuss the question on the discussion board for this course on Blackboard."
  },
  {
    "objectID": "syllabus.html#course-description",
    "href": "syllabus.html#course-description",
    "title": "Syllabus",
    "section": "",
    "text": "PSYC 3470: Data Analytics and Data Visualization in the Social and Behavioral Sciences\n3 hours; 3 credits\nCatalogue Description: How the “data revolution” has transformed the way we understand and interact with the world around us. Fundamental concepts and practical techniques and skills needed for data analytics and data visualization. Availability of large datasets and their use across a variety of settings, including social networks, libraries, governments, non-profits, etc. The emergence of practices with regard to data analysis and visual communication in the social and behavioral sciences. This course is the same as Sociology 3507.\n\n\nStudents will:\n\nDevelop familiarity and basic competency with concepts and techniques for data analytics and visualization\n\nOutcome: students will create and contribute to a weekly learning blog to practice and demonstrate their skill-acquisition process\n\nDevelop competencies in data structures, importing, filtering, wrangling, and curation techniques necessary for analysis and visualization\n\nOutcomes: competencies assessed and demonstrated in weekly assignments\n\nUnderstand principles of automation and reproducibility and learn how to produce and communicate computationally reproducible data analysis projects\n\nOutcomes: students create final project website and deliver a class presentation about their final research project.\n\nUnderstand and critically reflect upon data usage practices in society\n\nOutcomes: demonstrated in class room discussions and reflections on readings."
  },
  {
    "objectID": "syllabus.html#course-materials-and-textbook",
    "href": "syllabus.html#course-materials-and-textbook",
    "title": "Syllabus",
    "section": "",
    "text": "All of the course materials will be available in a timely fashion on this course website and/or posted on blackboard.\nLink to the course website: https://crumplab.com/psyc3470\n\n\n“Applied Data Skills: Processing & Presenting Data” (2023) Emily Nordmann and Lisa DeBruine.\nhttps://psyteachr.github.io/ads-v2\nThe textbook is a free and open-source web book. There are many additional free resources for learning R that will be discussed and made available throughout the semester in the compendium."
  },
  {
    "objectID": "syllabus.html#course-structure",
    "href": "syllabus.html#course-structure",
    "title": "Syllabus",
    "section": "",
    "text": "There are 15 weeks. This is an in-person class, and students are expected to participate in all aspects of the class. This is a class that involves learning computer programming skills for data-visualization and analysis. The assumption is that students may possess no prior skills in this area, so the course has an applied training component. Class time will involve mixtures of activities, including lectures, group-work, applied coding activities, presentations, and discussions."
  },
  {
    "objectID": "syllabus.html#course-schedule",
    "href": "syllabus.html#course-schedule",
    "title": "Syllabus",
    "section": "",
    "text": "Name\nDate\nTopic\n\n\n\n\nW0 M:\nJanuary 25, 2023\nIntroduction\n\n\nW1 M:\nJanuary 30, 2023\nIntroduction\n\n\nW1 W:\nFebruary 1, 2023\nIntro to R and Rstudio\n\n\nW2 M:\nFebruary 6, 2023\nIntro to R and Rstudio\n\n\nW2 W:\nFebruary 8, 2023\nReports with R Markdown\n\n\nNo class - College Closed\nFebruary 13, 2023\n\n\n\nW3 W:\nFebruary 15, 2023\nReports with R Markdown\n\n\nNo class - College closed\nFebruary 20, 2023\n\n\n\nW4 T(M):\nFebruary 21, 2023\nData Visualisation\n\n\nW4 W:\nFebruary 22, 2023\nData Visualisation\n\n\nW5 M:\nFebruary 27, 2023\nData Import\n\n\nW5 W:\nMarch 1, 2023\nData Import\n\n\nW6 M:\nMarch 6, 2023\nData Summaries\n\n\nW6 W:\nMarch 8, 2023\nData Summaries\n\n\nW7 M:\nMarch 13, 2023\nMore ggplot2\n\n\nW7 W:\nMarch 15, 2023\nMore ggplot2\n\n\nW8 M:\nMarch 20, 2023\nData Relations\n\n\nW8 W:\nMarch 22, 2023\nData Relations\n\n\nW9 M:\nMarch 27, 2023\nPractice Report\n\n\nW9 W:\nMarch 29, 2023\nPractice Report\n\n\nW10 M:\nApril 3, 2023\nPractice Report\n\n\nSpring Break\nApril 5, 2023\n\n\n\nSpring Break\nApril 12, 2023\n\n\n\nW11 M:\nApril 17, 2023\nData Tidying\n\n\nW11 W:\nApril 19, 2023\nData Tidying\n\n\nW12 M:\nApril 24, 2023\nData Wrangling\n\n\nW12 W:\nApril 26, 2023\nData Wrangling\n\n\nW13 M:\nMay 1, 2023\nCustomising Visualizations & Reports\n\n\nW13 W:\nMay 3, 2023\nCustomising Visualizations & Reports\n\n\nW14 M:\nMay 8, 2023\nTidy Tuesday\n\n\nW14 W:\nMay 10, 2023\nTidy Tuesday\n\n\nReading Day\nMay 12, 2023\n\n\n\nW15 M:\nMay 15, 2023\nWrap-up\n\n\nLast day of classes\nMay 16, 2023\n\n\n\nW15 M:\nMay 17, 2023\nFinal Exam Period 10:30am - 12:30pm"
  },
  {
    "objectID": "syllabus.html#portfolio-development",
    "href": "syllabus.html#portfolio-development",
    "title": "Syllabus",
    "section": "",
    "text": "Throughout this course you will learn how to analyse and communicate data using reproducible computational methods. These methods allow you to communicate information in many formats including websites, interactive web apps, slide decks, pdfs, word documents, books, web-books, and more. Students can use these very same methods to create their own personal websites, which can be used as a digital portfolio to showcase examples of their work and demonstrate their skills. To support digital portfolio development, students will learn to create a personal website and blog. Students will add content to their websites in the form of blogs and other weekly assignment content prompts. By the end of the course students will have created evidence of their learning process in the form of their course website and blog. Students can choose to share their coursework publicly or privately. For more information on see notes on privacy and sharing in the compendium."
  },
  {
    "objectID": "syllabus.html#assignments-and-grading",
    "href": "syllabus.html#assignments-and-grading",
    "title": "Syllabus",
    "section": "",
    "text": "This is an engagement and skills-acquisition based course. At the beginning of the course and throughout, students will be given instruction on building and maintaining a website using quarto and github pages. Each week students will contribute blog posts and other content to their websites in response to module assignments. Students will be expected to submit URL links to their blogs using Blackboard. Students are expected to attend and participate in each class. The final project includes conducting, communicating, and preserving a reproducible data analysis project.\n\n\n\n\n\nAssignment\nPoints\nTotal\n\n\n\n\nCourse blog/website\n5\n5\n\n\nWeekly Blog post\n4\n60\n\n\nAttendance\n1\n15\n\n\nMidterm project\n10\n10\n\n\nFinal Project\n15\n15\n\n\n\n\n100\n\n\nExtra Credit\n\n\n\n\nTidy Tuesday x3\n5\n15\n\n\nFinal Presentation\n5\n5\n\n\n\nPercentage grades are converted to letter grades according to the following rubric.\n\n\n\nLetter grade\nRange\n\n\n\n\nA+\n96.67-100\n\n\nA\n93.33-96.66\n\n\nA-\n90-93.32\n\n\nB+\n86.67-89.99\n\n\nB\n83.33-86.66\n\n\nB-\n80-83.32\n\n\nC+\n76.67-79.99\n\n\nC\n73-76.66\n\n\nC-\n70-72.99\n\n\nD+\n66.67-69.99\n\n\nD\n63.33-66.66\n\n\nD-\n60-63.32\n\n\nF\n0-59.99"
  },
  {
    "objectID": "syllabus.html#attendance",
    "href": "syllabus.html#attendance",
    "title": "Syllabus",
    "section": "",
    "text": "Students are expected to attend and participate in each class."
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "",
    "text": "Due dates are suggestions for completing coursework on a weekly basis. You may be able to work ahead, but you are not encouraged to fall behind.\nYou should email me if you have an exceptional circumstance preventing you from taking an assessment during an assessment week.\n\n\n\nThe syllabus may be updated for clarity or to make adjustments for pedagogical purposes. The most current version of the syllabus is always available from the course website.\n\n\n\nIn the event of an emergency, contact me as soon as possible. If you are missing an exam for religious reasons refer to the state law regarding non-attendance because of religious beliefs noted in the front matter of the Undergraduate Bulletin and Graduate Bulletin. These may be found on the Academic Calendars, Course Schedules, and Bulletins page of the Registrar’s website. See also the student bereavement policy at http://www.brooklyn.cuny.edu/web/about/initiatives/policies/bereavement.php.\n\n\n\n\nIn order to receive disability-related academic accommodations students must first be registered with the Center for Student Disability Services. Students who have a documented disability or suspect they may have a disability are invited to set up an appointment with the Director of the Center for Student Disability Services, at 718-951-5538. If you have already registered with the Center for Student Disability Services, please provide your professor with the course accommodation form and discuss your specific accommodation with him/her.\n\n\n\n\nI will regularly use e-mail via blackboard to send out announcements, changes in the syllabus, reminders about tests or due dates etc. It is your responsibility to check e-mail regularly to keep up-to-date with these announcements. I will use the e-mail address you have listed with the College. Therefore, please make sure that this is indeed the correct address.\nIf you have questions please email me:\n\nput PSYC 3470 in your subject line\nemail me at: mcrump@brooklyn.cuny.edu\n\n\n\n\nThe Library maintains a collection of links to sites that can assist you with proper citation format and paraphrasing and quoting other authors at Research & Writing Help. The Learning Center has writing tutors available to help you with your writing http://lc.brooklyn.cuny.edu/.\nThe best learning is done in conversation with others, whether they are people—classmates, teachers, friends—or texts—books, articles, essays, poems, films etc. It should not be a solitary process. However, the assignments that you hand in for this course must be done on your own, should represent your own thinking, and should be original work that you have done for this particular course. A good way to balance these two seemingly contradictory approaches (collaborative learning and original individually-produced work) without knowingly—or, even unwittingly—resorting to plagiarism or other forms of academic misconduct is to learn and meticulously observe the rules for citing the work of others (this could be the great point your roommate made that you used in your paper, it could be a well-turned phrase from an academic essay, or it could be anything in between). It is your responsibility to learn what constitutes plagiarism and the correct rules for citing sources—read the information on the following website carefully: http://www.brooklyn.cuny.edu/bc/policies/. The bottom line is: passing off anyone’s words or ideas as your own for any reason whatsoever is plagiarism."
  },
  {
    "objectID": "syllabus.html#violations-of-academic-integrity",
    "href": "syllabus.html#violations-of-academic-integrity",
    "title": "Syllabus",
    "section": "",
    "text": "It is the responsibility of each student to understand and act in accordance with the University’s policy on Academic Integrity, described below.\n\n\nThe faculty and administration of Brooklyn College support an environment free from cheating and plagiarism. Each student is responsible for being aware of what constitutes cheating and plagiarism and for avoiding both. The complete text of the CUNY Academic Integrity Policy and the Brooklyn College procedure for implementing that policy can be found at this site. If a faculty member suspects a violation of academic integrity and, upon investigation, confirms that violation, or if the student admits the violation, the faculty member MUST report the violation.\n\n\n\nRemember, you are responsible for not cheating or violating CUNY’s Academic Integrity Policy. You are responsible for understanding that policy, and for conducting yourself in a manner such that you do not violate the policy.\nThe above link lists many examples of cheating and plagiarism that are not allowed. There are many more specific acts that you should NOT do. Here is an additional list of activities that will be sufficient cause for immediate failure in the course.\n\nDo not take pictures of exam or quiz questions and share them with other students\nDo not give other students answers during an exam or quiz, or any other assignment that is an individual assignment\nDo not copy work from another source and submit it as your own\nDo not copy and paste text from the internet and submit it as your own words\nDo not copy and paste text and slightly alter wording to pass the work off as your own\nDo not hire someone else to do the coursework for you\nDo not copy and paste text into a paraphrasing app, and then submit the output of the paraphrasing app as your own work\nDo not copy random words from the internet that have nothing to do with the assignment and submit them as your own work.\nDo not work on individual assignments with other students, share answers or other material, and then all hand in versions of the same thing that are slightly different.\nDo not plagiarize yourself by submitting work that you have previously completed in another class.\n\n\n\n\nIf a faculty member suspects a violation of academic integrity and, upon investigation, confirms that violation, or if the student admits the violation, the faculty member MUST report the violation. Students should be aware that faculty may use plagiarism detection software.\nThere is no excuse for cheating. Students who are caught cheating may receive a failing grade for the entire course. All students who violate the academic integrity will receive a Faculty Action Report, which will go on their personal file at the Academic Integrity Office."
  },
  {
    "objectID": "syllabus.html#faq",
    "href": "syllabus.html#faq",
    "title": "Syllabus",
    "section": "",
    "text": "If you have questions about the syllabus, let’s talk about it in class, and/or please create a thread to discuss the question on the discussion board for this course on Blackboard."
  }
]