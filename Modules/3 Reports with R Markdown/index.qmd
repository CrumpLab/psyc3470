---
title: "3 Reports with R Markdown"
author: "Matt Crump"
date: "2/1/2023"
order: 3 
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

## Read

<https://psyteachr.github.io/ads-v2/02-reports.html>

## Overview

The textbook chapter covers writing R markdown documents (.Rmd extension). R Markdown is a note-book style coding document that can contain plain text (markdown), and executable R code chunks along with outputs, and compile everything into one output document. This system using a package called `knitr` to "knit" together the plain text and code into a final output.

Our class is using a newer note-book system called quarto (.qmd extension). Most of the same concepts and syntax used in .Rmd work in .qmd.

We are just starting to learn bits of R coding. In class we have only be executing bits of R code in the console and pressing enter to run the code. You will always be able to run code in the console. Moving forward we will be writing whole scripts of code and saving our scripts in text files. It is possible to store R code in .R files, however, these script files do not allow for regular text. Instead, we will be using notebook style .qmd documents that can contain both code and text.

### MOST IMPORTANT: Reproducible document

The most important concept here is that we will be learning to code using a reproducible document creation system. This provides an integrated document format to write and execute code, and to write text for purposes of communication. 

### Basic Skills for this section

1. Be able to make a new .qmd document
2. Be able to render a .qmd document
3. Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.
4. Be aware of resources to help you learn more about markdown options.
5. Be able to insert an R code chunk, and show the output in the rendered document.
 - macro for quick insert
6. Running R code chunks in a qmd
  - pressing play
  - copy/paste into console
  - highlight then command-enter (mac) 
  - precedence issues (first to last)
7. Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.
8. Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)
9. Write inline r code.
10. Explain how the rendering environment is different from the Rstudio environment.
11. Be aware of more advanced quarto options for html documents, and try some of the options.


## Additional resources

### Quarto documents

The quarto website contains many helpful examples. We will cover aspects throughout the semester.

General tips for writing in quarto markdown:

<https://quarto.org/docs/authoring/markdown-basics.html>

Making an html document:

<https://quarto.org/docs/output-formats/html-basics.html>

Making a pdf document:

<https://quarto.org/docs/output-formats/pdf-basics.html>

R code chunk options:

<https://quarto.org/docs/computations/execution-options.html>


## Week 3 assignment

1. Write your blog post, and submit the link to this assignment on blackboard.

At this point we are just beginning to start coding, and at the end of this session we will have learned more about using .qmd documents. We have already been using .qmd documents for our blog posts. And, we will be using throughout the semester for almost everything we do, including coding.

The blog post for this week is to write a post where you check off as many basic skills as you can for this section. The basic skills are:

1. Be able to make a new .qmd document
2. Be able to render a .qmd document
3. Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.
4. Be aware of resources to help you learn more about markdown options.
5. Be able to insert an R code chunk, and show the output in the rendered document.
 - macro for quick insert
6. Running R code chunks in a qmd
  - pressing play
  - copy/paste into console
  - highlight then command-enter (mac) 
  - precedence issues (first to last)
7. Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.
8. Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)
9. Write inline r code.
10. Explain how the rendering environment is different from the Rstudio environment.
11. Be aware of more advanced quarto options for html documents, and try some of the options.

"Checking off" the skills means making notes, or making additions/changes to your .qmd document to show yourself you can accomplish these tasks and/or understand the concepts. 

I intend to produce a tutorial video on this and post it here ASAP.


















